%%
%% This is file `glossary-tree.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% glossaries.dtx  (with options: `glossary-tree.sty,package')
%% 
%%  glossaries.dtx
%%  Copyright 2025 Nicola Talbot
%% 
%%  This work may be distributed and/or modified under the
%%  conditions of the LaTeX Project Public License, either version 1.3
%%  of this license or (at your option) any later version.
%%  The latest version of this license is in
%%    http://www.latex-project.org/lppl.txt
%%  and version 1.3 or later is part of all distributions of LaTeX
%%  version 2005/12/01 or later.
%% 
%%  This work has the LPPL maintenance status `maintained'.
%% 
%%  The Current Maintainer of this work is Nicola Talbot.
%% 
%%  This work consists of the files glossaries.dtx and glossaries.ins and the derived files glossaries.sty, glossary-hypernav.sty, glossary-inline.sty, glossary-list.sty, glossary-long.sty, glossary-longbooktabs.sty, glossary-longragged.sty, glossary-mcols.sty, glossary-super.sty, glossary-superragged.sty, glossary-tree.sty, glossaries-babel.sty, glossaries-polyglossia.sty, glossaries-prefix.sty, glossaries-accsupp.sty, glossaries-compatible-207.sty, glossaries-compatible-307.sty, glossaries-2020-03-19.sty, glossaries-accsupp-2020-03-19.sty, glossaries-babel-2020-03-19.sty, glossaries-compatible-207-2020-03-19.sty, glossaries-compatible-307-2020-03-19.sty, glossaries-polyglossia-2020-03-19.sty, glossaries-prefix-2020-03-19.sty, glossary-hypernav-2020-03-19.sty, glossary-inline-2020-03-19.sty, glossary-list-2020-03-19.sty, glossary-long-2020-03-19.sty, glossary-longbooktabs-2020-03-19.sty, glossary-longragged-2020-03-19.sty, glossary-mcols-2020-03-19.sty, glossary-super-2020-03-19.sty, glossary-superragged-2020-03-19.sty, glossary-tree-2020-03-19.sty, glossaries-2021-11-01.sty, glossaries-accsupp-2021-11-01.sty, glossaries-babel-2021-11-01.sty, glossaries-compatible-207-2021-11-01.sty, glossaries-compatible-307-2021-11-01.sty, glossaries-polyglossia-2021-11-01.sty, glossaries-prefix-2021-11-01.sty, glossary-hypernav-2021-11-01.sty, glossary-inline-2021-11-01.sty, glossary-list-2021-11-01.sty, glossary-long-2021-11-01.sty, glossary-longbooktabs-2021-11-01.sty, glossary-longragged-2021-11-01.sty, glossary-mcols-2021-11-01.sty, glossary-super-2021-11-01.sty, glossary-superragged-2021-11-01.sty, glossary-tree-2021-11-01.sty, glossaries-2022-11-03.sty, glossary-hypernav-2022-11-03.sty, glossaries-2024-04-03.sty, glossaries-2025-03-19.sty, glossary-mcols-2025-03-19.sty, glossary-tree-2025-03-19.sty, example-glossaries-acronym-desc.tex, example-glossaries-acronym.tex, example-glossaries-acronyms-lang.tex, example-glossaries-brief.tex, example-glossaries-childmultipar.tex, example-glossaries-childnoname.tex, example-glossaries-cite.tex, example-glossaries-constants.tex, example-glossaries-images.tex, example-glossaries-long.tex, example-glossaries-longchild.tex, example-glossaries-multipar.tex, example-glossaries-parent.tex, example-glossaries-symbolnames.tex, example-glossaries-symbols.tex, example-glossaries-url.tex, example-glossaries-user.tex, example-glossaries-utf8.tex, glossaries.l2h.
%% 
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
\NeedsTeXFormat{LaTeX2e}
\DeclareRelease{v4.46}{2020-03-19}{glossary-tree-2020-03-19.sty}
\DeclareRelease{v4.49}{2021-11-01}{glossary-tree-2021-11-01.sty}
\DeclareRelease{v4.58}{2025-03-19}{glossary-tree-2025-03-19.sty}
\DeclareCurrentRelease{v4.8}{2025-08-11}
\ProvidesPackage{glossary-tree}[2025/08/11 v4.8 (NLCT)]
\ExplSyntaxOn
\NewDocumentCommand \GlsTreeSetup { m }
 {
   \keys_set:nn { glossaries / styles / tree * } { #1 }
 }
\keys_define:nn { glossaries / styles }
 {
    tree* .code:n =
     {
       \GlsTreeSetup { #1 }
     } ,
}
\NewDocumentCommand \GlsTreeUpdateWidestNameOrSymbol { o m }
 {
   \IfValueTF { #1 }
    {
      \glossaries_tree_update_widest_name:nn
       { #1 }
       { \glsentryname { #2 } }
      \glossaries_tree_update_widest_symbol:nn
       { #1 }
       { \glsentrysymbol { #2 } }
    }
    {
      \exp_args:Nv
        \glossaries_tree_update_widest_name:nn
         { glo@ \glsdetoklabel { #2 } @level }
         { \glsentryname { #2 } }
      \exp_args:Nv
        \glossaries_tree_update_widest_symbol:nn
         { glo@ \glsdetoklabel { #2 } @level }
         { \glsentrysymbol { #2 } }
    }
 }
\NewDocumentCommand \GlsTreeUpdateWidestNameAndSymbol { o m }
 {
   \IfValueTF { #1 }
    {
      \glossaries_tree_update_widest_name_symbol:nnn
       { #1 }
       { \glsentryname { #2 } }
       { \glsentrysymbol { #2 } }
    }
    {
      \exp_args:Nv
        \glossaries_tree_update_widest_name_symbol:nnn
         { glo@ \glsdetoklabel { #2 } @level }
         { \glsentryname { #2 } }
         { \glsentrysymbol { #2 } }
    }
 }
\newcommand\GlsTreeStarBox[1]{#1}
\newcommand\GlsTreeStarOuterBox[1]{\GlsTreeStarBox{#1}}
\newcommand\GlsTreeStarNameBox[1]{\GlsTreeStarBox{#1}}
\newcommand\GlsTreeStarSymbolBox[1]{\GlsTreeStarBox{#1}}
\newcommand\GlsTreeStarItemCounterBox[1]{#1}
\newcommand\GlsTreeStarSubItemCounterBox[1]{
 \GlsTreeStarItemCounterBox { #1 }
}
\cs_if_exist:NTF \pdfbookmark
 {
  \cs_new:Nn \glossaries_tree_bookmark_group:nnn
   {
     \pdfbookmark [ #1 ] { #3 } { \currentglossary . #2 }
   }
 }
 {
  \cs_new:Nn \glossaries_tree_bookmark_group:nnn { }
 }
\cs_new:Nn \glossaries_tree_subgroup_title:nn { #2 }
\cs_new:Nn \glossaries_tree_pre_subgroup:nn
 {
   \glsgroupskip
 }
\cs_new:Nn \glossaries_tree_pre_item:nnn { }
\cs_new:Nn \glossaries_tree_post_item:nnn { }
\cs_new:Nn \glossaries_tree_namenobox:n
 { \GlsTreeStarNameBox { { #1 } } }
\cs_new:Nn \glossaries_tree_namebox:nnn
 {
   \GlsTreeStarNameBox { \makebox [ #1 ] [ #2 ] { #3 } }
 }
\cs_generate_variant:Nn \glossaries_tree_namebox:nnn { vVn , vvn }
\cs_new:Nn \glossaries_tree_symbolnobox:n
 { \GlsTreeStarSymbolBox { { #1 } } }
\cs_new:Nn \glossaries_tree_symbolbox:nnn
 {
   \GlsTreeStarSymbolBox { \makebox [ #1 ] [ #2 ] { #3 } }
 }
\cs_generate_variant:Nn \glossaries_tree_symbolbox:nnn
  { vVn , vvn }
\cs_new:Nn \glossaries_tree_namesymbolnobox:n
 { \GlsTreeStarOuterBox { #1 } }
\cs_new:Nn \glossaries_tree_namesymbolbox:nnn
 {
   \GlsTreeStarOuterBox { \makebox [ #1 ] [ #2 ] { #3 } }
 }
\cs_generate_variant:Nn \glossaries_tree_namesymbolbox:nnn
  { vVn , vvn , nVn , nvn }
\cs_new:Nn \glossaries_tree_paren:n { ( #1 ) }
\cs_new:Nn \glossaries_tree_entryitem_nobox:n
 {
   \GlsTreeStarItemCounterBox { #1 }
 }
\cs_new:Nn \glossaries_tree_entryitem_box:nnn
 {
   \GlsTreeStarItemCounterBox { \makebox [ #1 ] [ #2 ] { #3 } }
 }
\cs_generate_variant:Nn \glossaries_tree_entryitem_box:nnn { VVn }
\cs_new:Nn \glossaries_tree_subentryitem_nobox:n
 {
   \GlsTreeStarSubItemCounterBox { { #1 } }
 }
\cs_new:Nn \glossaries_tree_subentryitem_box:nnn
 {
   \GlsTreeStarSubItemCounterBox { \makebox [ #1 ] [ #2 ] { #3 } }
 }
\cs_generate_variant:Nn \glossaries_tree_subentryitem_box:nnn { VVn }
\cs_new:Nn \glossaries_tree_reset_all_widest:
 {
   \int_step_inline:nnn
     { \c_zero_int } { \l__glossaries_tree_max_known_level_int }
    {
      \exp_args:Ne \__glossaries_tree_reset_all_widest:n
       { \romannumeral ##1 }
    }
 }
\cs_new:Nn \__glossaries_tree_reset_all_widest:n
 {
   \tl_if_exist:cT
        { l__glossaries_tree_namewidth #1 _tl }
    {
      \tl_set:cn
       { l__glossaries_tree_namewidth #1 _tl }
       { \c_zero_dim }
    }
   \tl_if_exist:cT
        { l__glossaries_tree_symbolwidth #1 _tl }
    {
      \tl_set:cn
       { l__glossaries_tree_symbolwidth #1 _tl }
       { \c_zero_dim }
    }
   \tl_if_exist:cT { @glswidestname #1 }
    {
      \tl_clear:c { @glswidestname #1 }
    }
   \tl_if_exist:cT { l__glossaries_tree_widest_symbol #1 _tl }
    {
      \tl_clear:c { l__glossaries_tree_widest_symbol #1 _tl }
    }
   \dim_if_exist:cT { l__glossaries_tree_namesymonlywidth #1 _dim }
    {
      \dim_zero:c { l__glossaries_tree_namesymonlywidth #1 _dim }
    }
   \tl_if_exist:cT { l__glossaries_tree_namesymbolwidth #1 _tl }
    {
      \tl_set:cn { l__glossaries_tree_namesymbolwidth #1 _tl }
       { \c_zero_dim }
    }
 }
\cs_new:Nn \glossaries_tree_set_name_width:nn
 {
   \int_compare:nNnT
     { #1 } > { \l__glossaries_tree_max_known_level_int }
    {
      \int_set:Nn \l__glossaries_tree_max_known_level_int { #1 }
    }
   \tl_clear_new:c
     { l__glossaries_tree_namewidth \romannumeral #1 _tl }
   \tl_if_eq:nnTF { #2 } { natural }
    {
      \tl_set:cn { l__glossaries_tree_namewidth \romannumeral #1 _tl }
       { \c_zero_dim }
    }
    {
      \tl_if_eq:nnF { #2 } { widest }
       {
         \tl_set:cn
           { l__glossaries_tree_namewidth \romannumeral #1 _tl }
           { #2 }
       }
    }
 }
\cs_new:Nn \glossaries_tree_set_symbol_width:nn
 {
   \int_compare:nNnT
     { #1 } > { \l__glossaries_tree_max_known_level_int }
    {
      \int_set:Nn \l__glossaries_tree_max_known_level_int { #1 }
    }
   \tl_clear_new:c
     { l__glossaries_tree_symbolwidth \romannumeral #1 _tl }
   \tl_if_eq:nnTF { #2 } { natural }
    {
      \tl_set:cn { l__glossaries_tree_symbolwidth \romannumeral #1 _tl }
       { \c_zero_dim }
    }
    {
      \tl_if_eq:nnF { #2 } { widest }
       {
         \tl_set:cn
           { l__glossaries_tree_symbolwidth \romannumeral #1 _tl }
           { #2 }
       }
    }
 }
\cs_new:Nn \glossaries_tree_set_widest_name:nn
 {
   \int_compare:nNnT
     { #1 } > { \l__glossaries_tree_max_known_level_int }
    {
      \int_set:Nn \l__glossaries_tree_max_known_level_int { #1 }
    }
   \tl_set:cn { @glswidestname \romannumeral #1 }
    { #2 }
 }
\cs_new:Nn \glossaries_tree_gset_widest_name:nn
 {
   \int_compare:nNnT
     { #1 } > { \l__glossaries_tree_max_known_level_int }
    {
      \int_gset:Nn \l__glossaries_tree_max_known_level_int { #1 }
    }
   \tl_gset:cn { @glswidestname \romannumeral #1 }
    { #2 }
 }
\cs_new:Nn \glossaries_tree_set_widest_symbol:nn
 {
   \int_compare:nNnT
     { #1 } > { \l__glossaries_tree_max_known_level_int }
    {
      \int_set:Nn \l__glossaries_tree_max_known_level_int { #1 }
    }
   \tl_set:cn { l__glossaries_tree_widest_symbol \romannumeral #1 _tl }
    { #2 }
 }
\cs_new:Nn \glossaries_tree_gset_widest_symbol:nn
 {
   \int_compare:nNnT
     { #1 } > { \l__glossaries_tree_max_known_level_int }
    {
      \int_gset:Nn \l__glossaries_tree_max_known_level_int { #1 }
    }
   \tl_gset:cn { l__glossaries_tree_widest_symbol \romannumeral #1 _tl }
    { #2 }
 }
\cs_new:Nn \glossaries_tree_set_name_symbol_width:nn
 {
   \int_compare:nNnT
     { #1 } > { \l__glossaries_tree_max_known_level_int }
    {
      \int_set:Nn \l__glossaries_tree_max_known_level_int { #1 }
    }
   \tl_clear_new:c
     { l__glossaries_tree_namesymbolwidth \romannumeral #1 _tl }
   \tl_if_eq:nnTF { #2 } { natural }
    {
      \tl_set:cn { l__glossaries_tree_namesymbolwidth \romannumeral #1 _tl }
       { \c_zero_dim }
    }
    {
      \tl_if_eq:nnTF { #2 } { match ~ higher }
       {
         \tl_if_exist:cTF
           {
             l__glossaries_tree_namesymbolwidth
             \romannumeral \int_eval:n { #1 - \c_one_int } _tl
           }
          {
           \tl_set:ce
              { l__glossaries_tree_namesymbolwidth \romannumeral #1 _tl }
            {
              \exp_not:N \__glossaries_tree_match_namesymbolwidth:n
               { \romannumeral \int_eval:n { #1 - \c_one_int } }
            }
          }
          {
            \PackageError { glossary-tree }
             {
               Can't ~ match ~ name-symbol-width ~ level ~ #1 ~
               to ~ level ~ \int_eval:n { #1 - \c_one_int }
             }
             {
               There's ~ either ~ no ~ higher ~ level ~ or ~
               no ~ width ~ has ~ been ~ set ~ for ~ that ~ level
             }
          }
       }
       {
        \tl_if_eq:nnF { #2 } { widest }
         {
           \tl_set:cn
             { l__glossaries_tree_namesymbolwidth \romannumeral #1 _tl }
             { #2 }
         }
       }
    }
 }
\cs_new:Nn \__glossaries_tree_match_namesymbolwidth:n
 {
   \dim_use:c { l__glossaries_tree_namesymbolwidth #1 _dim }
 }
\cs_new:Nn \glossaries_tree_update_widest_name:nn
 {
   \int_compare:nNnT
     { #1 } > { \l__glossaries_tree_max_known_level_int }
    {
      \int_set:Nn \l__glossaries_tree_max_known_level_int { #1 }
    }
  \exp_args:Ne \__glossaries_tree_update_widest_name:nn
    { \romannumeral #1 } { #2 }
 }
\cs_generate_variant:Nn  \glossaries_tree_update_widest_name:nn
 { ne , nV , nv , no }
\cs_new:Nn \__glossaries_tree_update_widest_name:nn
 {
   \dim_if_exist:cT { l__glossaries_tree_namesymonlywidth #1 _dim }
    {
      \dim_zero:c { l__glossaries_tree_namesymonlywidth #1 _dim }
    }
   \dim_if_exist:cF
    { l__glossaries_tree_namewidth #1 _dim }
    {
      \dim_new:c { l__glossaries_tree_namewidth #1 _dim }
    }
   \bool_lazy_or:nnTF
     {
       \bool_not_p:n
        {\tl_if_exist_p:c { l__glossaries_tree_namewidth #1 _tl } }
     }
     { \tl_if_empty_p:c { l__glossaries_tree_namewidth #1 _tl } }
    {
      \__glossaries_tree_init_namewidth:n { #1 }
    }
    {
      \dim_set:cn { l__glossaries_tree_namewidth #1 _dim }
       { \tl_use:c { l__glossaries_tree_namewidth #1 _tl } }
    }
   \tl_if_empty:nTF { #1 }
    {
      \__glossaries_tree_measure_name:Nn \l__glossaries_tmpa_dim { #2 }
    }
    {
      \__glossaries_tree_measure_child_name:Nn
        \l__glossaries_tmpa_dim { #2 }
    }
   \dim_compare:nNnT
      { \l__glossaries_tmpa_dim } >
      { \dim_use:c { l__glossaries_tree_namewidth #1 _dim } }
    {
      \dim_set_eq:cN { l__glossaries_tree_namewidth #1 _dim }
       \l__glossaries_tmpa_dim
      \tl_set:cn { @glswidestname #1 } { #2 }
      \tl_set:cn { l__glossaries_tree_namewidth #1 _tl }
       { \dim_use:c { l__glossaries_tree_namewidth #1 _dim } }
    }
 }
\cs_new:Nn \glossaries_tree_update_widest_symbol:nn
 {
   \int_compare:nNnT
     { #1 } > { \l__glossaries_tree_max_known_level_int }
    {
      \int_set:Nn \l__glossaries_tree_max_known_level_int { #1 }
    }
  \exp_args:Ne \__glossaries_tree_update_widest_symbol:nn
    { \romannumeral #1 } { #2 }
 }
\cs_generate_variant:Nn  \glossaries_tree_update_widest_symbol:nn
 { ne , nV , nv , no }
\cs_new:Nn \__glossaries_tree_update_widest_symbol:nn
 {
   \dim_if_exist:cT { l__glossaries_tree_namesymonlywidth #1 _dim }
    {
      \dim_zero:c { l__glossaries_tree_namesymonlywidth #1 _dim }
    }
   \dim_if_exist:cF
    { l__glossaries_tree_symbolwidth #1 _dim }
    {
      \dim_new:c { l__glossaries_tree_symbolwidth #1 _dim }
    }
   \bool_lazy_or:nnTF
     {
       \bool_not_p:n
        { \tl_if_exist_p:c { l__glossaries_tree_symbolwidth #1 _tl } }
     }
     { \tl_if_empty_p:c { l__glossaries_tree_symbolwidth #1 _tl } }
    {
      \__glossaries_tree_init_symbolwidth:n { #1 }
    }
    {
      \dim_set:cn { l__glossaries_tree_symbolwidth #1 _dim }
       { \tl_use:c { l__glossaries_tree_symbolwidth #1 _tl } }
    }
   \tl_if_empty:nTF { #1 }
    {
      \__glossaries_tree_measure_symbol:Nn
        \l__glossaries_tmpa_dim { #2 }
    }
    {
      \__glossaries_tree_measure_child_symbol:Nn
        \l__glossaries_tmpa_dim { #2 }
    }
   \dim_compare:nNnT
      { \l__glossaries_tmpa_dim } >
      { \dim_use:c { l__glossaries_tree_symbolwidth #1 _dim } }
    {
      \dim_set_eq:cN { l__glossaries_tree_symbolwidth #1 _dim }
       \l__glossaries_tmpa_dim
      \tl_set:cn { l__glossaries_tree_widest_symbol #1 _tl } { #2 }
      \tl_set:cn { l__glossaries_tree_symbolwidth #1 _tl }
       { \dim_use:c { l__glossaries_tree_symbolwidth #1 _dim } }
    }
 }
\cs_new:Nn \glossaries_tree_update_widest_name_symbol:nnn
 {
   \int_compare:nNnT
     { #1 } > { \l__glossaries_tree_max_known_level_int }
    {
      \int_set:Nn \l__glossaries_tree_max_known_level_int { #1 }
    }
  \exp_args:Ne \__glossaries_tree_update_widest_name_symbol:nnn
    { \romannumeral #1 } { #2 } { #3 }
 }
\cs_generate_variant:Nn \glossaries_tree_update_widest_name_symbol:nnn
 { nee , nVV , nvv , noo }
\cs_new:Nn \__glossaries_tree_update_widest_name_symbol:nnn
 {
   \dim_if_exist:cF
    { l__glossaries_tree_namesymonlywidth #1 _dim }
    {
      \dim_new:c { l__glossaries_tree_namesymonlywidth #1 _dim }
    }
   \tl_if_empty:nTF { #1 }
    {
      \__glossaries_tree_measure_name:Nn \l__glossaries_tmpa_dim { #2 }
      \__glossaries_tree_measure_symbol:Nn \l__glossaries_tmpb_dim { #3 }
    }
    {
      \__glossaries_tree_measure_child_name:Nn
        \l__glossaries_tmpa_dim { #2 }
      \__glossaries_tree_measure_child_symbol:Nn
        \l__glossaries_tmpb_dim { #3 }
    }
   \dim_set:Nn \gls@tmplen
      { \l__glossaries_tmpa_dim + \l__glossaries_tmpb_dim }
   \dim_compare:nNnT
      { \gls@tmplen }
        >
      {
        \dim_use:c { l__glossaries_tree_namesymonlywidth #1 _dim }
      }
    {
      \tl_set:cn { @glswidestname #1 } { #2 }
      \tl_set:cn { l__glossaries_tree_widest_symbol #1 _tl } { #3 }
      \dim_set_eq:cN { l__glossaries_tree_namesymonlywidth #1 _dim }
       { \gls@tmplen }
      \bool_lazy_and:nnTF
        {
          \tl_if_exist_p:c { l__glossaries_tree_namewidth #1 _tl }
        }
        { \tl_if_empty_p:c { l__glossaries_tree_namewidth #1 _tl } }
       {
         \dim_if_exist:cF
          { l__glossaries_tree_namewidth #1 _dim }
          {
            \dim_new:c { l__glossaries_tree_namewidth #1 _dim }
          }
         \__glossaries_tree_init_namewidth:n { #1 }
         \dim_compare:nNnT
            { \l__glossaries_tmpa_dim } >
            { \dim_use:c { l__glossaries_tree_namewidth #1 _dim } }
          {
            \dim_set_eq:cN { l__glossaries_tree_namewidth #1 _dim }
             \l__glossaries_tmpa_dim
            \tl_set:cn { l__glossaries_tree_namewidth #1 _tl }
             { \dim_use:c { l__glossaries_tree_namewidth #1 _dim } }
          }
       }
      \bool_lazy_and:nnTF
        {
          \tl_if_exist_p:c { l__glossaries_tree_symbolwidth #1 _tl }
        }
        { \tl_if_empty_p:c { l__glossaries_tree_symbolwidth #1 _tl } }
       {
         \dim_if_exist:cF
          { l__glossaries_tree_symbolwidth #1 _dim }
          {
            \dim_new:c { l__glossaries_tree_symbolwidth #1 _dim }
          }
         \__glossaries_tree_init_symbolwidth:n { #1 }
         \dim_compare:nNnT
            { \l__glossaries_tmpb_dim } >
            { \dim_use:c { l__glossaries_tree_symbolwidth #1 _dim } }
          {
            \dim_set_eq:cN { l__glossaries_tree_symbolwidth #1 _dim }
             \l__glossaries_tmpb_dim
            \tl_set:cn { l__glossaries_tree_symbolwidth #1 _tl }
             { \dim_use:c { l__glossaries_tree_symbolwidth #1 _dim } }
          }
       }
    }
 }
\cs_new:Nn \__glossaries_tree_header_font:n { \textbf { #1 } }
\cs_new:Nn \__glossaries_tree_sub_header_font:n
 {
   \__glossaries_tree_header_font:n  { #1 }
 }
\cs_new:Nn \__glossaries_tree_header_fmt:n
 {
   \raggedright
   #1
 }
\cs_new:Nn \__glossaries_tree_sub_header_fmt:n
 {
   \__glossaries_tree_header_fmt:n { #1 }
 }
\cs_new:Nn \__glossaries_tree_hypernav_font:n
 {
   \textbf { #1 }
 }
\cs_new:Nn \__glossaries_tree_hypernav_fmt:n
 {
   \raggedright
   #1
 }
\cs_new:Nn \__glossaries_tree_name_case:n { #1 }
\cs_new:Nn \__glossaries_tree_symbol_case:n { #1 }
\cs_new:Nn \__glossaries_tree_child_name_case:n
 { \__glossaries_tree_name_case:n { #1 } }
\cs_new:Nn \__glossaries_tree_child_symbol_case:n
 { \__glossaries_tree_symbol_case:n { #1 } }
\cs_new:Nn \__glossaries_tree_name_encap:n { #1 }
\cs_new:Nn \__glossaries_tree_child_name_encap:n { #1 }
\cs_new:Nn \__glossaries_tree_symbol_encap:n
 {
   \glossaries_tree_paren:n { #1 }
 }
\cs_new:Nn \__glossaries_tree_child_symbol_encap:n
 {
   \glossaries_tree_paren:n { #1 }
 }
\bool_new:N \l__glossaries_tree_child_style_inherited_bool
\bool_set_true:N \l__glossaries_tree_child_style_inherited_bool
\cs_new:Nn \__glossaries_tree_name_font:n { \textbf { #1 } }
\cs_new:Nn \__glossaries_tree_child_name_font:n
 {
   \__glossaries_tree_name_font:n { #1 }
 }
\cs_new:Nn \__glossaries_tree_symbol_font:n { #1 }
\cs_new:Nn \__glossaries_tree_child_symbol_font:n
 {
   \__glossaries_tree_symbol_font:n { #1 }
 }
\cs_new:Nn \__glossaries_tree_desc_font:n { #1 }
\cs_new:Nn \__glossaries_tree_child_desc_font:n
 {
   \__glossaries_tree_desc_font:n { #1 }
 }
\cs_new:Nn \__glossaries_tree_loc_font:n { #1 }
\cs_new:Nn \__glossaries_tree_child_loc_font:n
 {
   \__glossaries_tree_loc_font:n { #1 }
 }
\cs_new:Nn \__glossaries_tree_gloss_name:n
 {
   \glossentryname { #1 }
 }
\cs_new:Nn \__glossaries_tree_gloss_symbol:n
 {
   \glossentrysymbol { #1 }
 }
\cs_new:Nn \__glossaries_tree_gloss_desc:n
 {
   \glossentrydesc { #1 } \glspostdescription
 }
\cs_new:Nn \__glossaries_tree_show_desc:nn
 {
   \glossaries_if_has_nonsuppressed_desc:nT
    { #1 } { #2 }
 }
\cs_new:Nn \__glossaries_tree_show_loc:nnn
 {
   \tl_if_blank:nF { #2 } { #3 }
 }
\cs_new:Nn \__glossaries_tree_child_gloss_name:n
 {
   \__glossaries_tree_gloss_name:n { #1 }
 }
\cs_new:Nn \__glossaries_tree_child_gloss_symbol:n
 {
   \__glossaries_tree_gloss_symbol:n { #1 }
 }
\cs_new:Nn \__glossaries_tree_child_gloss_desc:n
 {
   \__glossaries_tree_gloss_desc:n { #1 }
 }
\cs_new:Nn \__glossaries_tree_show_child_desc:nn
 {
   \__glossaries_tree_show_desc:nn { #1 } { #2 }
 }
\cs_new:Nn \__glossaries_tree_show_child_loc:nnn
 {
   \__glossaries_tree_show_loc:nnn { #1 } { #2 } { #3 }
 }
\tl_new:N \l__glossaries_tree_name_sym_sep_tl
\tl_set:Nn \l__glossaries_tree_name_sym_sep_tl { ~ }
\tl_new:N \l__glossaries_tree_child_name_sym_sep_tl
\tl_set:Nn \l__glossaries_tree_child_name_sym_sep_tl
  {
    \l__glossaries_tree_name_sym_sep_tl
  }
\cs_new:Nn \__glossaries_tree_name_sym_item:nnn
 {
   \exp_args:NV \__glossaries_tree_name_sym_item:nnnn
     \l__glossaries_tree_name_sym_sep_tl
     { #1 } { #2 } { #3 }
 }
\cs_new:Nn \__glossaries_tree_name_sym_item:nnnn
 {
   \glstarget { #2 } { #3 }
   \tl_if_empty:nF { #4 }
    {
      #1 #4
    }
 }
\cs_new:Nn \__glossaries_tree_name_sym_subitem:nnn
 {
   \exp_args:NV \__glossaries_tree_name_sym_subitem:nnnn
     \l__glossaries_tree_child_name_sym_sep_tl
     { #1 } { #2 } { #3 }
 }
\cs_new:Nn \__glossaries_tree_name_sym_subitem:nnnn
 {
   \__glossaries_tree_name_sym_item:nnnn
     { #1 } { #2 } { #3 } { #4 }
 }
\tl_new:N \l__glossaries_tree_post_namesymbol_tl
\tl_set:Nn \l__glossaries_tree_post_namesymbol_tl { ~ }
\tl_new:N \l__glossaries_tree_post_child_namesymbol_tl
\tl_set:Nn \l__glossaries_tree_post_child_namesymbol_tl
 {
   \l__glossaries_tree_post_namesymbol_tl
 }
\tl_new:N \l__glossaries_tree_pre_desc_tl
\tl_new:N \l__glossaries_tree_pre_child_desc_tl
\tl_set:Nn \l__glossaries_tree_pre_child_desc_tl
 {
   \l__glossaries_tree_pre_desc_tl
 }
\tl_new:N \l__glossaries_tree_pre_loc_tl
\tl_set:Nn \l__glossaries_tree_pre_loc_tl { ~ }
\tl_new:N \l__glossaries_tree_pre_child_loc_tl
\tl_set:Nn \l__glossaries_tree_pre_child_loc_tl
 {
   \l__glossaries_tree_pre_loc_tl
 }
\tl_new:N \l__glossaries_tree_post_loc_tl
\tl_new:N \l__glossaries_tree_post_child_loc_tl
\tl_set:Nn \l__glossaries_tree_post_child_loc_tl
 {
   \l__glossaries_tree_post_loc_tl
 }
\int_new:N \l__glossaries_tree_max_known_level_int
\dim_new:N \l__glossaries_tree_offset_dim
\tl_new:N \l__glossaries_tree_offset_tl
\dim_new:N \l__glossaries_tree_namewidth_dim
\tl_new:N \l__glossaries_tree_namewidth_tl
\tl_set:Nn \l__glossaries_tree_namewidth_tl { \c_zero_dim }
\tl_new:N \l__glossaries_tree_namealign_tl
\tl_set:Nn \l__glossaries_tree_namealign_tl { l }
\cs_new:Nn \__glossaries_tree_init_namesymbolwidths:
 {
   \tl_if_empty:NTF \l__glossaries_tree_prenamesym_width_tl
    {
     \dim_zero:N \l__glossaries_tree_prenamesym_width_dim
    }
    {
     \dim_set:Nn \l__glossaries_tree_prenamesym_width_dim
      {
        \l__glossaries_tree_prenamesym_width_tl
      }
    }
   \tl_if_empty:NTF \l__glossaries_tree_presubnamesym_width_tl
    {
      \dim_zero:N \l__glossaries_tree_presubnamesym_width_dim
    }
    {
     \dim_set:Nn \l__glossaries_tree_presubnamesym_width_dim
      {
        \l__glossaries_tree_presubnamesym_width_tl
      }
    }
   \tl_if_empty:NF \l__glossaries_tree_namesymbolwidth_padding_tl
    {
     \dim_set:Nn
       \l__glossaries_tree_namesymbolwidth_padding_dim
       { \l__glossaries_tree_namesymbolwidth_padding_tl }
    }
   \tl_if_empty:NF \l__glossaries_tree_namewidth_padding_tl
    {
      \dim_set:Nn \l__glossaries_tree_namewidth_padding_dim
       { \l__glossaries_tree_namewidth_padding_tl }
    }
   \tl_if_empty:NF \l__glossaries_tree_symbolwidth_padding_tl
    {
      \dim_set:Nn \l__glossaries_tree_symbolwidth_padding_dim
       { \l__glossaries_tree_symbolwidth_padding_tl }
    }
   \int_step_inline:nnn
     { \c_zero_int } { \l__glossaries_tree_max_known_level_int }
    {
      \exp_args:Ne \__glossaries_tree_init_namewidth:n
       { \romannumeral ##1 }
      \exp_args:Ne \__glossaries_tree_init_symbolwidth:n
       { \romannumeral ##1 }
      \exp_args:Ne \__glossaries_tree_calc_namesymbolwidth:n
       { \romannumeral ##1 }
    }
 }
\cs_new:Nn \__glossaries_tree_init_namewidth:n
 {
   \tl_if_exist:cTF { l__glossaries_tree_namewidth #1 _tl}
    {
      \dim_if_exist:cF
        { l__glossaries_tree_namewidth #1 _dim }
       {
         \dim_new:c { l__glossaries_tree_namewidth #1 _dim }
       }
      \tl_if_empty:cTF { l__glossaries_tree_namewidth #1 _tl }
       {
         \bool_lazy_and:nnTF
           { \tl_if_exist_p:c { @glswidestname #1 } }
           { \bool_not_p:n { \tl_if_empty_p:c { @glswidestname #1 } } }
          {
            \tl_if_empty:nTF { #1 }
             {
               \exp_args:NV \__glossaries_tree_measure_name:n
                 \@glswidestname
             }
             {
               \exp_args:Nnv \__glossaries_tree_measure_child_name:nn { #1 }
                  { @glswidestname #1 }
             }
          }
          {
            \dim_zero:c { l__glossaries_tree_namewidth #1 _dim }
          }
       }
       {
         \dim_set:cn { l__glossaries_tree_namewidth #1 _dim }
          { \tl_use:c { l__glossaries_tree_namewidth #1 _tl } }
       }
    }
    {
      \dim_if_exist:cT
        { l__glossaries_tree_namewidth #1 _dim }
       {
         \dim_zero:c { l__glossaries_tree_namewidth #1 _dim }
       }
    }
 }
\cs_new:Nn \__glossaries_tree_measure_name:n
 {
   \__glossaries_tree_measure_name:Nn
     \l__glossaries_tree_namewidth_dim { #1 }
 }
\cs_new:Nn \__glossaries_tree_measure_name:Nn
 {
   \glsmeasurewidth #1
    {
      \__glossaries_tree_name_encap:n
       {
         \__glossaries_tree_name_font:n
          {
            \__glossaries_tree_name_case:n { #2 }
          }
       }
    }
 }
\cs_new:Nn \__glossaries_tree_measure_child_name:nn
 {
  \exp_args:Nc \__glossaries_tree_measure_child_name:Nn
    { l__glossaries_tree_namewidth #1 _dim }
    { #2 }
 }
\cs_new:Nn \__glossaries_tree_measure_child_name:Nn
 {
   \glsmeasurewidth #1
    {
      \__glossaries_tree_child_name_encap:n
       {
         \__glossaries_tree_child_name_font:n
          {
            \__glossaries_tree_child_name_case:n
             { #2 }
          }
       }
    }
 }
\cs_new:Nn \__glossaries_tree_namebox:n
 {
  \__glossaries_tree_namebox:nn { } { #1 }
 }
\cs_new:Nn \__glossaries_tree_namebox:nn
 {
   \bool_lazy_and:nnTF
     {
      \dim_if_exist_p:c
        { l__glossaries_tree_namewidth #1 _dim }
     }
     {
      \dim_compare_p:nNn
        { \dim_use:c { l__glossaries_tree_namewidth #1 _dim } }
        >
        { \c_zero_dim }
     }
    {
      \tl_if_exist:cTF { l__glossaries_tree_namealign #1 _tl }
       {
         \glossaries_tree_namebox:vvn
           { l__glossaries_tree_namewidth #1 _dim }
           { l__glossaries_tree_namealign #1 _tl }
           { #2 }
       }
       {
         \glossaries_tree_namebox:vVn
           { l__glossaries_tree_namewidth #1 _dim }
           \l__glossaries_tree_namealign_tl
           { #2 }
       }
    }
    {
      \glossaries_tree_namenobox:n { #2 }
    }
 }
\dim_new:N \l__glossaries_tree_symbolwidth_dim
\tl_new:N \l__glossaries_tree_symbolwidth_tl
\tl_set:Nn \l__glossaries_tree_symbolwidth_tl { \c_zero_dim }
\tl_new:N \l__glossaries_tree_symbolalign_tl
\tl_set:Nn \l__glossaries_tree_symbolalign_tl { l }
\cs_new:Nn \__glossaries_tree_init_symbolwidth:n
 {
   \tl_if_exist:cTF { l__glossaries_tree_symbolwidth #1 _tl}
    {
      \dim_if_exist:cF
        { l__glossaries_tree_symbolwidth #1 _dim }
       {
         \dim_new:c { l__glossaries_tree_symbolwidth #1 _dim }
       }
      \tl_if_empty:cTF { l__glossaries_tree_symbolwidth #1 _tl }
       {
         \bool_lazy_and:nnTF
           { \tl_if_exist_p:c { l__glossaries_tree_widest_symbol #1 _tl } }
           {
             \bool_not_p:n
              {
                \tl_if_empty_p:c { l__glossaries_tree_widest_symbol #1 _tl }
              }
           }
          {
            \tl_if_empty:nTF { #1 }
             {
               \exp_args:NV \__glossaries_tree_measure_symbol:n
                 \l__glossaries_tree_widest_symbol_tl
             }
             {
               \exp_args:Nnv \__glossaries_tree_measure_child_symbol:nn { #1 }
                { l__glossaries_tree_widest_symbol #1 _tl }
             }
          }
          {
            \dim_zero:c { l__glossaries_tree_symbolwidth #1 _dim }
          }
       }
       {
         \dim_set:cn { l__glossaries_tree_symbolwidth #1 _dim }
          { \tl_use:c { l__glossaries_tree_symbolwidth #1 _tl } }
       }
    }
    {
      \dim_if_exist:cT
        { l__glossaries_tree_symbolwidth #1 _dim }
       {
         \dim_zero:c { l__glossaries_tree_symbolwidth #1 _dim }
       }
    }
 }
\cs_new:Nn \__glossaries_tree_measure_symbol:n
 {
   \__glossaries_tree_measure_symbol:Nn
     \l__glossaries_tree_symbolwidth_dim { #1 }
 }
\cs_new:Nn \__glossaries_tree_measure_symbol:Nn
 {
   \glsmeasurewidth #1
    {
      \__glossaries_tree_symbol_encap:n
       {
         \__glossaries_tree_symbol_font:n
          {
            \__glossaries_tree_symbol_case:n { #2 }
          }
       }
    }
 }
\cs_new:Nn \__glossaries_tree_measure_child_symbol:nn
 {
  \exp_args:Nc \__glossaries_tree_measure_child_symbol:Nn
    { l__glossaries_tree_symbolwidth #1 _dim }
    { #2 }
 }
\cs_new:Nn \__glossaries_tree_measure_child_symbol:Nn
 {
   \glsmeasurewidth #1
    {
      \__glossaries_tree_child_symbol_encap:n
       {
         \__glossaries_tree_child_symbol_font:n
          {
            \__glossaries_tree_child_symbol_case:n
             { #2 }
          }
       }
    }
 }
\cs_new:Nn \__glossaries_tree_symbolbox:n
 {
   \__glossaries_tree_symbolbox:nn { } { #1 }
 }
\cs_new:Nn \__glossaries_tree_symbolbox:nn
 {
   \bool_lazy_and:nnTF
     {
      \dim_if_exist_p:c
        { l__glossaries_tree_symbolwidth #1 _dim }
     }
     {
      \dim_compare_p:nNn
        { \dim_use:c { l__glossaries_tree_symbolwidth #1 _dim } }
        >
        { \c_zero_dim }
     }
    {
      \tl_if_exist:cTF { l__glossaries_tree_symbolalign #1 _tl }
       {
         \glossaries_tree_symbolbox:vvn
           { l__glossaries_tree_symbolwidth #1 _dim }
           { l__glossaries_tree_symbolalign #1 _tl }
           { #2 }
       }
       {
         \glossaries_tree_symbolbox:vVn
           { l__glossaries_tree_symbolwidth #1 _dim }
           \l__glossaries_tree_symbolalign_tl
           { #2 }
       }
    }
    {
      \glossaries_tree_symbolnobox:n { #2 }
    }
 }
\tl_new:N \l__glossaries_tree_prenamesym_align_tl
\tl_new:N \l__glossaries_tree_prenamesym_width_tl
\dim_new:N \l__glossaries_tree_prenamesym_width_dim
\cs_new:Nn \__glossaries_tree_prenamesym:n
 {
   \tl_if_empty:NTF \l__glossaries_tree_prenamesym_width_tl
    {
      \glossaries_tree_entryitem_nobox:n { #1 }
    }
    {
      \glossaries_tree_entryitem_box:VVn
       \l__glossaries_tree_prenamesym_width_dim
       \l__glossaries_tree_prenamesym_align_tl
       { #1 }
    }
 }
\cs_new:Nn \__glossaries_tree_prenamesym_font:n { #1 }
\tl_new:N \l__glossaries_tree_presubnamesym_align_tl
\tl_new:N \l__glossaries_tree_presubnamesym_width_tl
\dim_new:N \l__glossaries_tree_presubnamesym_width_dim
\cs_new:Nn \__glossaries_tree_presubnamesym:n
 {
   \tl_if_empty:NTF \l__glossaries_tree_presubnamesym_width_tl
    {
      \glossaries_tree_subentryitem_nobox:n { #1 }
    }
    {
      \glossaries_tree_subentryitem_box:VVn
       \l__glossaries_tree_presubnamesym_width_dim
       \l__glossaries_tree_presubnamesym_align_tl
       { #1 }
    }
 }
\cs_new:Nn \__glossaries_tree_presubnamesym_font:n { #1 }
\tl_new:N \l__glossaries_tree_namesymbolalign_tl
\tl_set:Nn \l__glossaries_tree_namesymbolalign_tl { l }
\cs_new:Nn \__glossaries_tree_namesymbox:n
 {
   \__glossaries_tree_namesymbox:nn { } { #1 }
 }
\cs_new:Nn \__glossaries_tree_namesymbox:nn
 {
   \bool_lazy_and:nnTF
     {
      \dim_if_exist_p:c
        { l__glossaries_tree_namesymbolwidth #1 _dim }
     }
     {
      \dim_compare_p:nNn
        { \dim_use:c { l__glossaries_tree_namesymbolwidth #1 _dim } }
        >
        { \c_zero_dim }
     }
    {
      \tl_if_exist:cTF { l__glossaries_tree_namesymbolalign #1 _tl }
       {
         \glossaries_tree_namesymbolbox:vvn
           { l__glossaries_tree_namesymbolwidth #1 _dim }
           { l__glossaries_tree_namesymbolalign #1 _tl }
           { #2 }
       }
       {
         \glossaries_tree_namesymbolbox:vVn
           { l__glossaries_tree_namesymbolwidth #1 _dim }
           \l__glossaries_tree_namesymbolalign_tl
           { #2 }
       }
    }
    {
      \glossaries_tree_namesymbolnobox:n { #2 }
    }
 }
\dim_new:N \l__glossaries_tree_namewidth_padding_dim
\tl_new:N \l__glossaries_tree_namewidth_padding_tl
\dim_new:N \l__glossaries_tree_symbolwidth_padding_dim
\tl_new:N \l__glossaries_tree_symbolwidth_padding_tl
\dim_new:N \l__glossaries_tree_namesymbolwidth_dim
\dim_new:N \l__glossaries_tree_namesymbolwidth_padding_dim
\tl_new:N \l__glossaries_tree_namesymbolwidth_padding_tl
\tl_new:N \l__glossaries_tree_namesymbolwidth_tl
\tl_set:Nn \l__glossaries_tree_namesymbolwidth_tl { \c_zero_dim }
\cs_new:Nn \__glossaries_tree_calc_namesymbolwidth:n
 {
   \tl_if_exist:cTF { l__glossaries_tree_namesymbolwidth #1 _tl}
    {
      \dim_if_exist:cF
        { l__glossaries_tree_namesymbolwidth #1 _dim }
       {
         \dim_new:c { l__glossaries_tree_namesymbolwidth #1 _dim }
       }
      \tl_if_empty:cTF { l__glossaries_tree_namesymbolwidth #1 _tl }
       {
         \dim_zero:c { l__glossaries_tree_namesymbolwidth #1 _dim }
         \bool_lazy_and:nnT
          {
            \tl_if_exist_p:c
             { l__glossaries_tree_itemcounter_padding #1 _tl }
          }
          {
            \bool_not_p:n
             {
               \tl_if_empty_p:c
                { l__glossaries_tree_itemcounter_padding #1 _tl }
             }
          }
          {
           \dim_add:cn
            { l__glossaries_tree_namesymbolwidth #1 _dim }
            {
              \tl_use:c { l__glossaries_tree_itemcounter_padding #1 _tl }
            }
          }
         \gls@start@measuring
         \tl_if_empty:nTF { #1 }
          {
            \settowidth \l__glossaries_tmpa_dim
             { \l__glossaries_tree_post_namesymbol_tl }
            \dim_add:Nn
              \l__glossaries_tree_namesymbolwidth_dim
             { \l__glossaries_tmpa_dim }
          }
          {
            \settowidth \l__glossaries_tmpa_dim
             { \l__glossaries_tree_post_child_namesymbol_tl }
            \dim_add:cn
             { l__glossaries_tree_namesymbolwidth #1 _dim }
             { \l__glossaries_tmpa_dim }
          }
         \bool_lazy_and:nnTF
           {
            \dim_if_exist_p:c { l__glossaries_tree_namesymonlywidth #1 _dim }
           }
           {
            \bool_not_p:n
             {
               \dim_compare_p:nNn
                { \dim_use:c { l__glossaries_tree_namesymonlywidth #1 _dim } }
                 =
                { \c_zero_dim }
             }
           }
          {
            \dim_add:cn
             { l__glossaries_tree_namesymbolwidth #1 _dim }
             {
               \dim_use:c { l__glossaries_tree_namesymonlywidth #1 _dim }
               + \l__glossaries_tree_namewidth_padding_dim
               + \l__glossaries_tree_symbolwidth_padding_dim
             }
            \tl_if_empty:nTF { #1 }
             {
              \bool_lazy_or:nnF
                { \cs_if_eq_p:NN \__glossaries_tree_name_encap:n \use_none:n }
                { \cs_if_eq_p:NN \__glossaries_tree_symbol_encap:n \use_none:n }
               {
                 \settowidth \l__glossaries_tmpa_dim
                  { \l__glossaries_tree_name_sym_sep_tl }
                 \dim_add:Nn \l__glossaries_tree_namesymbolwidth_dim
                  { \l__glossaries_tmpa_dim }
               }
             }
             {
              \bool_lazy_or:nnF
                { \cs_if_eq_p:NN \__glossaries_tree_child_name_encap:n \use_none:n }
                { \cs_if_eq_p:NN \__glossaries_tree_child_symbol_encap:n \use_none:n }
               {
                  \settowidth \l__glossaries_tmpa_dim
                   { \l__glossaries_tree_child_name_sym_sep_tl }
                  \dim_add:cn
                   { l__glossaries_tree_namesymbolwidth #1 _dim }
                   { \l__glossaries_tmpa_dim }
               }
             }
          }
          {
            \tl_if_empty:nTF { #1 }
             {
               \cs_if_eq:NNF \__glossaries_tree_name_encap:n \use_none:n
                {
                  \dim_compare:nNnTF
                    { \l__glossaries_tree_namewidth_dim } > { \c_zero_dim }
                   {
                     \dim_set:Nn \l__glossaries_tree_namesymbolwidth_dim
                      { \l__glossaries_tree_namewidth_dim }
                   }
                   {
                     \settowidth
                       \l__glossaries_tree_namesymbolwidth_dim
                       {
                         \__glossaries_tree_name_encap:n
                          {
                            \__glossaries_tree_name_font:n
                             {
                              \exp_args:NV \__glossaries_tree_name_case:n
                                \@glswidestname
                             }
                          }
                       }
                   }
                  \dim_add:Nn \l__glossaries_tree_namesymbolwidth_dim
                    { \l__glossaries_tree_namewidth_padding_dim }
                }
               \cs_if_eq:NNF \__glossaries_tree_symbol_encap:n \use_none:n
                {
                  \settowidth \l__glossaries_tmpa_dim
                   { \l__glossaries_tree_name_sym_sep_tl }
                  \dim_add:Nn \l__glossaries_tree_namesymbolwidth_dim
                   { \l__glossaries_tmpa_dim }
                  \bool_lazy_or:nnTF
                   {
                     \bool_not_p:n
                      { \tl_if_exist_p:N \l__glossaries_tree_widest_symbol_tl }
                   }
                   {
                    \dim_compare_p:nNn
                     { \l__glossaries_tree_symbolwidth_dim } > { \c_zero_dim }
                   }
                   {
                     \dim_add:Nn \l__glossaries_tree_namesymbolwidth_dim
                      { \l__glossaries_tree_symbolwidth_dim }
                   }
                   {
                     \settowidth \l__glossaries_tmpa_dim
                      {
                        \__glossaries_tree_symbol_encap:n
                         {
                           \__glossaries_tree_symbol_font:n
                            {
                              \exp_args:NV \__glossaries_tree_symbol_case:n
                                \l__glossaries_tree_widest_symbol_tl
                            }
                         }
                      }
                     \dim_add:Nn \l__glossaries_tree_namesymbolwidth_dim
                      { \l__glossaries_tmpa_dim }
                   }
                  \dim_add:Nn \l__glossaries_tree_namesymbolwidth_dim
                    { \l__glossaries_tree_symbolwidth_padding_dim }
                }
             }
             {
               \cs_if_eq:NNF \__glossaries_tree_child_name_encap:n \use_none:n
                {
                  \bool_lazy_and:nnTF
                   {
                     \dim_if_exist_p:c { l__glossaries_tree_namewidth #1 _dim }
                   }
                   {
                     \dim_compare_p:nNn
                       { \dim_use:c { l__glossaries_tree_namewidth #1 _dim } }
                        > { \c_zero_dim }
                   }
                   {
                     \dim_set:cn
                      { l__glossaries_tree_namesymbolwidth #1 _dim }
                      { \dim_use:c { l__glossaries_tree_namewidth #1 _dim } }
                   }
                   {
                     \tl_if_exist:cT
                      { @glswidestname #1 }
                      {
                       \exp_args:Nc \settowidth
                          { l__glossaries_tree_namesymbolwidth #1 _dim }
                         {
                           \__glossaries_tree_child_name_encap:n
                            {
                              \__glossaries_tree_child_name_font:n
                               {
                                 \exp_args:Nv \__glossaries_tree_child_name_case:n
                                   { @glswidestname #1 }
                               }
                            }
                         }
                       }
                   }
                  \dim_add:cn
                    { l__glossaries_tree_namesymbolwidth #1 _dim }
                    { \l__glossaries_tree_namewidth_padding_dim }
                }
               \cs_if_eq:NNF \__glossaries_tree_child_symbol_encap:n \use_none:n
                {
                  \settowidth \l__glossaries_tmpa_dim
                   { \l__glossaries_tree_child_name_sym_sep_tl }
                  \dim_add:cn
                   { l__glossaries_tree_namesymbolwidth #1 _dim }
                   { \l__glossaries_tmpa_dim }
                  \bool_lazy_and:nnTF
                   {
                     \dim_if_exist_p:c { l__glossaries_tree_symbolwidth #1 _dim }
                   }
                   {
                     \dim_compare_p:nNn
                      { \dim_use:c { l__glossaries_tree_symbolwidth #1 _dim } }
                        > { \c_zero_dim }
                   }
                   {
                     \dim_add:cn
                      { l__glossaries_tree_namesymbolwidth #1 _dim }
                      { \dim_use:c { l__glossaries_tree_symbolwidth #1 _dim } }
                   }
                   {
                     \tl_if_exist:cT
                      { l__glossaries_tree_widest_symbol #1 _tl }
                      {
                       \settowidth \l__glossaries_tmpa_dim
                        {
                          \__glossaries_tree_child_symbol_encap:n
                           {
                             \__glossaries_tree_child_symbol_font:n
                              {
                                \exp_args:Nv \__glossaries_tree_child_symbol_case:n
                                 { l__glossaries_tree_widest_symbol #1 _tl }
                              }
                           }
                        }
                       \dim_add:cn
                        { l__glossaries_tree_namesymbolwidth #1 _dim }
                        { \l__glossaries_tmpa_dim }
                      }
                   }
                  \dim_add:cn
                    { l__glossaries_tree_namesymbolwidth #1 _dim }
                    { \l__glossaries_tree_symbolwidth_padding_dim }
                }
             }
          }
         \gls@stop@measuring
       }
       {
         \dim_set:cn { l__glossaries_tree_namesymbolwidth #1 _dim }
          { \tl_use:c { l__glossaries_tree_namesymbolwidth #1 _tl } }
       }
    }
    {
      \dim_if_exist:cT
        { l__glossaries_tree_namesymbolwidth #1 _dim }
       {
         \dim_zero:c { l__glossaries_tree_namesymbolwidth #1 _dim }
       }
    }
 }
\tl_new:N \l__glossaries_tree_hangindent_tl
\keys_define:nn { glossaries / styles / tree * }
 {
   group-headings .bool_set:N = \l__glossaries_tree_group_headings_bool ,
   group-headings .initial:n = { false } ,
   bookmark-groups .choice: ,
   bookmark-groups / true .code:n =
    {
      \cs_set_eq:NN
        \__glossaries_tree_pregrouphead:nnn
        \__glossaries_tree_bookmark_group:nnn
    } ,
   bookmark-groups / false .code:n =
    {
      \cs_new:Nn \__glossaries_tree_pregrouphead:nnn { }
    } ,
   bookmark-groups .default:n = true ,
   hide-groups .bool_set:N = \l__glossaries_tree_hide_groups_bool ,
   hide-groups .initial:n = { false } ,
   group-skip .tl_set:N = \l__glossaries_tree_group_skip_tl ,
   group-skip .initial:n = { 1ex \@plus 2\p@ \@minus \p@ } ,
   post-group-heading-skip .tl_set:N = \l__glossaries_tree_postgrouphead_skip_tl ,
   post-group-heading-skip .initial:n = { \p@ \@plus 2\p@ } ,
   par-indent .tl_set:N = \l__glossaries_tree_parindent_tl ,
   par-indent .default:n = { } ,
   par-skip .tl_set:N = \l__glossaries_tree_parskip_tl ,
   par-skip .initial:n = { \c_zero_dim \@plus 0.3\p@ } ,
   hang-indent .code:n =
    {
      \tl_if_eq:nnTF { #1 } { calculated }
       {
         \tl_set:Nn \l__glossaries_tree_hangindent_tl
          {
            \l__glossaries_tree_namesymbolwidth_dim
            + \l__glossaries_tree_namesymbolwidth_padding_dim
            + \l__glossaries_tree_prenamesym_width_dim
            + \l__glossaries_tree_presubnamesym_width_dim
          }
       }
       {
         \tl_set:Nn \l__glossaries_tree_hangindent_tl { #1 }
       }
    },
   hang-indent .default:n = { calculated } ,
   name-symbol-padding .tl_set:N =
     \l__glossaries_tree_namesymbolwidth_padding_tl ,
   name-padding .tl_set:N =
     \l__glossaries_tree_namewidth_padding_tl ,
   symbol-padding .tl_set:N =
     \l__glossaries_tree_symbolwidth_padding_tl ,
   child-offset .tl_set:N = \l__glossaries_tree_offset_tl ,
   child-offset .initial:n = { 1em } ,
   header-font .code:n =
    {
      \tl_if_empty:nTF { #1 }
       {
         \cs_set:Nn \__glossaries_tree_header_font:n { ##1 }
       }
       {
         \cs_set:Nn \__glossaries_tree_header_font:n
          {
            #1 { ##1 }
          }
       }
    } ,
   header-align .choice: ,
   header-align / left .code:n =
    {
      \cs_set:Nn \__glossaries_tree_header_fmt:n
       {
         \raggedright ##1
       }
    } ,
   header-align / right .code:n =
    {
      \cs_set:Nn \__glossaries_tree_header_fmt:n
       {
         \raggedleft ##1
       }
    } ,
   header-align / center .code:n =
    {
      \cs_set:Nn \__glossaries_tree_header_fmt:n
       {
         \centering ##1
       }
    } ,
   header-align / indent .code:n =
    {
      \cs_set:Nn \__glossaries_tree_header_fmt:n
       {
         \l__glossaries_tree_par_setup_tl
         \par
         ##1
       }
    } ,
   sub-header-font .code:n =
    {
      \tl_if_eq:nnTF { #1 } { inherit }
       {
         \cs_set:Nn \__glossaries_tree_sub_header_font:n
          {
            \__glossaries_tree_header_font:n { ##1 }
          }
       }
       {
         \tl_if_empty:nTF { #1 }
          {
            \cs_set:Nn \__glossaries_tree_sub_header_font:n { ##1 }
          }
          {
            \cs_set:Nn \__glossaries_tree_sub_header_font:n
             {
               #1 { ##1 }
             }
          }
       }
    } ,
   sub-header-align .choice: ,
   sub-header-align / inherit .code:n =
    {
      \cs_set:Nn \__glossaries_tree_sub_header_fmt:n
       {
         \__glossaries_tree_header_fmt:n { ##1 }
       }
    } ,
   sub-header-align / left .code:n =
    {
      \cs_set:Nn \__glossaries_tree_sub_header_fmt:n
       {
         \raggedright ##1
       }
    } ,
   sub-header-align / right .code:n =
    {
      \cs_set:Nn \__glossaries_tree_sub_header_fmt:n
       {
         \raggedleft ##1
       }
    } ,
   sub-header-align / center .code:n =
    {
      \cs_set:Nn \__glossaries_tree_sub_header_fmt:n
       {
         \centering ##1
       }
    } ,
   sub-header-align / indent .code:n =
    {
      \cs_set:Nn \__glossaries_tree_sub_header_fmt:n
       {
         \l__glossaries_tree_par_setup_tl
         \par
         ##1
       }
    } ,
   hyper-nav .bool_set:N = \l__glossaries_tree_hypernav_bool ,
   hyper-nav .initial:n = { false } ,
   hyper-nav-skip .tl_set:N = \l__glossaries_tree_hypernav_skip_tl ,
   hyper-nav-skip .initial:n = { \l__glossaries_tree_group_skip_tl } ,
   hyper-nav-font .code:n =
    {
      \cs_set:Nn \__glossaries_tree_hypernav_font:n
       {
         #1 { ##1 }
       }
    } ,
   hyper-nav-align .choice: ,
   hyper-nav-align / left .code:n =
    {
      \cs_set:Nn \__glossaries_tree_hypernav_fmt:n
       {
         \raggedright ##1
       }
    } ,
   hyper-nav-align / right .code:n =
    {
      \cs_set:Nn \__glossaries_tree_hypernav_fmt:n
       {
         \raggedleft ##1
       }
    } ,
   hyper-nav-align / center .code:n =
    {
      \cs_set:Nn \__glossaries_tree_hypernav_fmt:n
       {
         \centering ##1
       }
    } ,
   hyper-nav-align / indent .code:n =
    {
      \cs_set:Nn \__glossaries_tree_hypernav_fmt:n
       {
         \l__glossaries_tree_par_setup_tl
         \par
         ##1
       }
    } ,
   name-case .choice: ,
   name-case / normal .code =
    {
      \cs_set:Nn \__glossaries_tree_gloss_name:n
       {
         \glossentryname { ##1 }
       }
      \cs_set_eq:NN \__glossaries_tree_name_case:n \use:n
    } ,
   name-case / firstuc .code =
    {
      \cs_set:Nn \__glossaries_tree_gloss_name:n
       {
         \Glossentryname { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_name_case:n
       { \glssentencecase { ##1 } }
    } ,
   name-case / uc .code =
    {
      \cs_set:Nn \__glossaries_tree_gloss_name:n
       {
         \GLOSSentryname { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_name_case:n
       { \glsuppercase { ##1 } }
    } ,
   name-case / title .code =
    {
      \cs_set:Nn \__glossaries_tree_gloss_name:n
       {
         \GlossEntryName { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_name_case:n
       { \glscapitalisewords { ##1 } }
    } ,
   child-name-case .choice: ,
   child-name-case / inherit .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_name:n
       {
         \__glossaries_tree_gloss_name:n { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_child_name_case:n
       { \__glossaries_tree_name_case:n { ##1 } }
    } ,
   child-name-case / normal .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_name:n
       {
         \glossentryname { ##1 }
       }
      \cs_set_eq:NN
       \__glossaries_tree_child_name_case:n \use:n
    } ,
   child-name-case / firstuc .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_name:n
       {
         \Glossentryname { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_child_name_case:n
       { \glssentencecase { ##1 } }
    } ,
   child-name-case / uc .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_name:n
       {
         \GLOSSentryname { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_child_name_case:n
       { \glsuppercase { ##1 } }
    } ,
   child-name-case / title .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_name:n
       {
         \GlossEntryName { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_child_name_case:n
       { \glscapitalisewords { ##1 } }
    } ,
   symbol-case .choice: ,
   symbol-case / normal .code =
    {
      \cs_set:Nn \__glossaries_tree_gloss_symbol:n
       {
         \glossentrysymbol { ##1 }
       }
      \cs_set_eq:NN \__glossaries_tree_symbol_case:n \use:n
    } ,
   symbol-case / firstuc .code =
    {
      \cs_set:Nn \__glossaries_tree_gloss_symbol:n
       {
         \Glossentrysymbol { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_symbol_case:n
       { \glssentencecase { ##1 } }
    } ,
   symbol-case / uc .code =
    {
      \cs_set:Nn \__glossaries_tree_gloss_symbol:n
       {
         \GLOSSentrysymbol { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_symbol_case:n
       { \glsuppercase { ##1 } }
    } ,
   symbol-case / title .code =
    {
      \cs_set:Nn \__glossaries_tree_gloss_symbol:n
       {
         \GlossEntrySymbol { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_symbol_case:n
       { \glscapitalisewords { ##1 } }
    } ,
   child-symbol-case .choice: ,
   child-symbol-case / inherit .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_symbol:n
       {
         \__glossaries_tree_gloss_symbol:n { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_child_symbol_case:n
       { \__glossaries_tree_symbol_case:n { ##1 } }
    } ,
   child-symbol-case / normal .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_symbol:n
       {
         \glossentrysymbol { ##1 }
       }
      \cs_set_eq:NN \__glossaries_tree_child_symbol_case:n \use:n
    } ,
   child-symbol-case / firstuc .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_symbol:n
       {
         \Glossentrysymbol { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_child_symbol_case:n
       { \glssentencecase { ##1 } }
    } ,
   child-symbol-case / uc .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_symbol:n
       {
        \GLOSSentrysymbol { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_child_symbol_case:n
       { \glsuppercase { ##1 } }
    } ,
   child-symbol-case / title .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_symbol:n
       {
        \GlossEntrySymbol { ##1 }
       }
      \cs_set:Nn \__glossaries_tree_child_symbol_case:n
       { \glscapitalisewords { ##1 } }
    } ,
   description-case .choice: ,
   description-case / normal .code =
    {
      \cs_set:Nn \__glossaries_tree_gloss_desc:n
       {
         \glossentrydesc { ##1 } \glspostdescription
       }
    } ,
   description-case / firstuc .code =
    {
      \cs_set:Nn \__glossaries_tree_gloss_desc:n
       {
         \Glossentrydesc { ##1 } \glspostdescription
       }
    } ,
   description-case / uc .code =
    {
      \cs_set:Nn \__glossaries_tree_gloss_desc:n
       {
         \GLOSSentrydesc { ##1 } \glspostdescription
       }
    } ,
   description-case / title .code =
    {
      \cs_set:Nn \__glossaries_tree_gloss_desc:n
       {
         \GlossEntryDesc { ##1 } \glspostdescription
       }
    } ,
   child-description-case .choice: ,
   child-description-case / inherit .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_desc:n
       {
         \__glossaries_tree_gloss_desc:n { ##1 }
       }
    } ,
   child-description-case / normal .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_desc:n
       {
         \glossentrydesc { ##1 } \glspostdescription
       }
    } ,
   child-description-case / firstuc .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_desc:n
       {
         \Glossentrydesc { ##1 } \glspostdescription
       }
    } ,
   child-description-case / uc .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_desc:n
       {
         \GLOSSentrydesc { ##1 } \glspostdescription
       }
    } ,
   child-description-case / title .code =
    {
      \cs_set:Nn \__glossaries_tree_child_gloss_desc:n
       {
         \GlossEntryDesc { ##1 } \glspostdescription
       }
    } ,
   omit-description .choice: ,
   omit-description / true .code:n =
    {
      \cs_set_eq:NN \__glossaries_tree_show_desc:nn \use_none:nn
    } ,
   omit-description / false .code:n =
    {
      \cs_set:Nn \__glossaries_tree_show_desc:nn
       {
         \glossaries_if_has_nonsuppressed_desc:nT
          { ##1 } { ##2 }
       }
    } ,
   omit-description .default:n = true ,
   omit-child-description .choice: ,
   omit-child-description / true .code:n =
    {
      \cs_set_eq:NN \__glossaries_tree_show_child_desc:nn \use_none:nn
    } ,
   omit-child-description / false .code:n =
    {
      \cs_set:Nn \__glossaries_tree_show_child_desc:nn
       {
         \glossaries_if_has_nonsuppressed_desc:nT
          { ##1 } { ##2 }
       }
    } ,
   omit-child-description / inherit .code:n =
    {
      \cs_set:Nn \__glossaries_tree_show_child_desc:nn
       {
         \__glossaries_tree_show_desc:nn { ##1 } { ##2 }
       }
    } ,
   omit-child-description .default:n = true ,
   omit-location .choice: ,
   omit-location / true .code:n =
    {
      \cs_set_eq:NN \__glossaries_tree_show_loc:nnn \use_none:nnn
    } ,
   omit-location / false .code:n =
    {
      \cs_set:Nn \__glossaries_tree_show_loc:nnn
       {
         \tl_if_blank:nF { ##2 } { ##3 }
       }
    } ,
   omit-location .default:n = true ,
   omit-child-location .choice: ,
   omit-child-location / true .code:n =
    {
      \cs_set_eq:NN \__glossaries_tree_show_child_loc:nnn \use_none:nnn
    } ,
   omit-child-location / false .code:n =
    {
      \cs_set:Nn \__glossaries_tree_show_child_loc:nnn
       {
         \tl_if_blank:nF { ##2 } { ##3 }
       }
    } ,
   omit-child-location / inherit .code:n =
    {
      \cs_set:Nn \__glossaries_tree_show_child_loc:nnn
       {
         \__glossaries_tree_show_loc:nnn { ##1 } { ##2 } { ##3 }
       }
    } ,
   omit-child-location .default:n = true ,
    name-style .choice: ,
    name-style / name ~ ( symbol ) .code:n =
     {
       \cs_set_eq:NN \__glossaries_tree_name_encap:n \use:n
       \cs_set:Nn \__glossaries_tree_symbol_encap:n
        {
          \glossaries_tree_paren:n { ##1 }
        }
       \bool_if:NT \l__glossaries_tree_child_style_inherited_bool
        {
          \cs_set_eq:NN
            \__glossaries_tree_child_name_encap:n
            \__glossaries_tree_name_encap:n
          \cs_set_eq:NN
            \__glossaries_tree_child_symbol_encap:n
            \__glossaries_tree_symbol_encap:n
        }
       \cs_set:Nn \__glossaries_tree_name_sym_item:nnnn
        {
          \glstarget { ##2 } { ##3 }
          \tl_if_empty:nF { ##4 }
           {
             ##1 ##4
           }
        }
     } ,
    name-style / name ~ symbol .code:n =
     {
       \cs_set_eq:NN \__glossaries_tree_name_encap:n \use:n
       \cs_set_eq:NN \__glossaries_tree_symbol_encap:n \use:n
       \bool_if:NT \l__glossaries_tree_child_style_inherited_bool
        {
          \cs_set_eq:NN
            \__glossaries_tree_child_name_encap:n
            \__glossaries_tree_name_encap:n
          \cs_set_eq:NN
            \__glossaries_tree_child_symbol_encap:n
            \__glossaries_tree_symbol_encap:n
        }
       \cs_set:Nn \__glossaries_tree_name_sym_item:nnnn
        {
          \glstarget { ##2 } { ##3 }
          \tl_if_empty:nF { ##4 }
           {
             ##1 ##4
           }
        }
     } ,
    name-style / symbol ~ name .code:n =
     {
       \cs_set_eq:NN \__glossaries_tree_name_encap:n \use:n
       \cs_set_eq:NN \__glossaries_tree_symbol_encap:n \use:n
       \bool_if:NT \l__glossaries_tree_child_style_inherited_bool
        {
          \cs_set_eq:NN
            \__glossaries_tree_child_name_encap:n
            \__glossaries_tree_name_encap:n
          \cs_set_eq:NN
            \__glossaries_tree_child_symbol_encap:n
            \__glossaries_tree_symbol_encap:n
        }
       \cs_set:Nn \__glossaries_tree_name_sym_item:nnnn
        {
          \tl_if_empty:nF { ##4 }
            {
              ##4 ##1
            }
          \glstarget { ##2 } { ##3 }
        }
     } ,
    name-style / symbol ~ ( name ) .code:n =
     {
       \cs_set:Nn \__glossaries_tree_name_encap:n
        {
          \glossaries_tree_paren:n { ##1 }
        }
       \cs_set_eq:NN \__glossaries_tree_symbol_encap:n \use:n
       \bool_if:NT \l__glossaries_tree_child_style_inherited_bool
        {
          \cs_set_eq:NN
            \__glossaries_tree_child_name_encap:n
            \__glossaries_tree_name_encap:n
          \cs_set_eq:NN
            \__glossaries_tree_child_symbol_encap:n
            \__glossaries_tree_symbol_encap:n
        }
       \cs_set:Nn \__glossaries_tree_name_sym_item:nnnn
        {
          \tl_if_empty:nTF { ##4 }
           {
             \glstarget { ##2 } { ##3 }
           }
           {
              ##4 ##1
              \glstarget { ##2 } { ##3 }
           }
        }
     } ,
    name-style / symbol .code:n =
     {
       \cs_set_eq:NN \__glossaries_tree_name_encap:n \use_none:n
       \cs_set_eq:NN \__glossaries_tree_symbol_encap:n \use:n
       \bool_if:NT \l__glossaries_tree_child_style_inherited_bool
        {
          \cs_set_eq:NN
            \__glossaries_tree_child_name_encap:n
            \__glossaries_tree_name_encap:n
          \cs_set_eq:NN
            \__glossaries_tree_child_symbol_encap:n
            \__glossaries_tree_symbol_encap:n
        }
       \cs_set:Nn \__glossaries_tree_name_sym_item:nnnn
        {
          \glstarget { ##2 } { ##3 }
        }
     } ,
    name-style / name .code:n =
     {
       \cs_set_eq:NN \__glossaries_tree_name_encap:n \use:n
       \cs_set_eq:NN \__glossaries_tree_symbol_encap:n \use_none:n
       \bool_if:NT \l__glossaries_tree_child_style_inherited_bool
        {
          \cs_set_eq:NN
            \__glossaries_tree_child_name_encap:n
            \__glossaries_tree_name_encap:n
          \cs_set_eq:NN
            \__glossaries_tree_child_symbol_encap:n
            \__glossaries_tree_symbol_encap:n
        }
       \cs_set:Nn \__glossaries_tree_name_sym_item:nnnn
        {
           \glstarget { ##2 } { ##3 }
        }
     } ,
    child-name-style .choice: ,
    child-name-style / inherit .code:n =
     {
       \bool_set_true:N \l__glossaries_tree_child_style_inherited_bool
       \cs_set_eq:NN
         \__glossaries_tree_child_name_encap:n
         \__glossaries_tree_name_encap:n
       \cs_set_eq:NN
         \__glossaries_tree_child_symbol_encap:n
         \__glossaries_tree_symbol_encap:n
       \cs_set:Nn \__glossaries_tree_name_sym_subitem:nnnn
        {
          \__glossaries_tree_name_sym_item:nnnn
           { ##1 } { ##2 } { ##3 } { ##4 }
        }
     } ,
    child-name-style / omit .code:n =
     {
       \bool_set_false:N \l__glossaries_tree_child_style_inherited_bool
       \cs_set_eq:NN \__glossaries_tree_child_name_encap:n \use_none:n
       \cs_set_eq:NN \__glossaries_tree_child_symbol_encap:n \use_none:n
       \cs_set:Nn \__glossaries_tree_name_sym_subitem:nnnn
        {
          \glstarget { ##2 } { \strut }
        }
     } ,
    child-name-style / name ~ ( symbol ) .code:n =
     {
       \bool_set_false:N \l__glossaries_tree_child_style_inherited_bool
       \cs_set_eq:NN \__glossaries_tree_child_name_encap:n \use:n
       \cs_set:Nn \__glossaries_tree_child_symbol_encap:n
        {
          \glossaries_tree_paren:n { ##1 }
        }
       \cs_set:Nn \__glossaries_tree_name_sym_subitem:nnnn
        {
          \glstarget { ##2 } { ##3 }
          \tl_if_empty:nF { ##4 }
           {
             ##1 ##4
           }
        }
     } ,
    child-name-style / name ~ symbol .code:n =
     {
       \bool_set_false:N \l__glossaries_tree_child_style_inherited_bool
       \cs_set_eq:NN \__glossaries_tree_child_name_encap:n \use:n
       \cs_set_eq:NN \__glossaries_tree_child_symbol_encap:n \use:n
       \cs_set:Nn \__glossaries_tree_name_sym_subitem:nnnn
        {
          \glstarget { ##2 } { ##3 }
          \tl_if_empty:nF { ##4 }
            {
              ##1 ##4
            }
        }
     } ,
    child-name-style / symbol ~ name .code:n =
     {
       \bool_set_false:N \l__glossaries_tree_child_style_inherited_bool
       \cs_set_eq:NN \__glossaries_tree_child_name_encap:n \use:n
       \cs_set_eq:NN \__glossaries_tree_child_symbol_encap:n \use:n
       \cs_set:Nn \__glossaries_tree_name_sym_subitem:nnnn
        {
          \tl_if_empty:nF { ##4 }
           {
             ##4 ##1
           }
          \glstarget { ##2 } { ##3 }
        }
     } ,
    child-name-style / symbol ~ ( name ) .code:n =
     {
       \bool_set_false:N \l__glossaries_tree_child_style_inherited_bool
       \cs_set_eq:NN \__glossaries_tree_child_symbol_encap:n \use:n
       \cs_set:Nn \__glossaries_tree_child_name_encap:n
        {
          \glossaries_tree_paren:n { ##1 }
        }
       \cs_set:Nn \__glossaries_tree_name_sym_subitem:nnnn
        {
          \tl_if_empty:nTF { ##4 }
           { \glstarget { ##2 } { ##3 } }
           {
             ##4 ##1
             \glstarget { ##2 } { ##3 }
           }
        }
     } ,
    child-name-style / symbol .code:n =
     {
       \bool_set_false:N \l__glossaries_tree_child_style_inherited_bool
       \cs_set_eq:NN \__glossaries_tree_child_symbol_encap:n \use:n
       \cs_set_eq:NN \__glossaries_tree_child_name_encap:n \use_none:n
       \cs_set:Nn \__glossaries_tree_name_sym_subitem:nnnn
        {
          \glstarget { ##2 } { ##4 }
        }
     } ,
    child-name-style / name .code:n =
     {
       \bool_set_false:N \l__glossaries_tree_child_style_inherited_bool
       \cs_set_eq:NN \__glossaries_tree_child_symbol_encap:n \use_none:n
       \cs_set_eq:NN \__glossaries_tree_child_name_encap:n \use:n
       \cs_set:Nn \__glossaries_tree_name_sym_subitem:nnnn
        {
          \glstarget { ##2 } { ##3 }
        }
     } ,
   name-font .code:n =
    {
      \tl_if_empty:nTF { #1 }
       {
         \cs_set:Nn \__glossaries_tree_name_font:n { ##1 }
       }
       {
         \cs_set:Nn \__glossaries_tree_name_font:n
          {
            #1 { ##1 }
          }
       }
    } ,
   child-name-font .code:n =
    {
      \tl_if_eq:nnTF { #1 } { inherit }
       {
         \cs_set:Nn \__glossaries_tree_child_name_font:n
          {
            \__glossaries_tree_name_font:n { ##1 }
          }
       }
       {
         \tl_if_empty:nTF { #1 }
          {
            \cs_set:Nn \__glossaries_tree_child_name_font:n { ##1 }
          }
          {
            \cs_set:Nn \__glossaries_tree_child_name_font:n
             {
               #1 { ##1 }
             }
          }
       }
    } ,
   symbol-font .code:n =
    {
      \tl_if_empty:nTF { #1 }
       {
         \cs_set:Nn \__glossaries_tree_symbol_font:n { ##1 }
       }
       {
         \cs_set:Nn \__glossaries_tree_symbol_font:n
          {
            #1 { ##1 }
          }
       }
    } ,
   child-symbol-font .code:n =
    {
      \tl_if_eq:nnTF { #1 } { inherit }
       {
         \cs_set:Nn \__glossaries_tree_child_symbol_font:n
          {
            \__glossaries_tree_symbol_font:n { ##1 }
          }
       }
       {
         \tl_if_empty:nTF { #1 }
          {
            \cs_set:Nn \__glossaries_tree_child_symbol_font:n { ##1 }
          }
          {
            \cs_set:Nn \__glossaries_tree_child_symbol_font:n
             {
               #1 { ##1 }
             }
          }
       }
    } ,
   description-font .code:n =
    {
      \tl_if_empty:nTF { #1 }
       {
         \cs_set:Nn \__glossaries_tree_desc_font:n { ##1 }
       }
       {
         \cs_set:Nn \__glossaries_tree_desc_font:n
          {
            #1 { ##1 }
          }
       }
    } ,
   child-description-font .code:n =
    {
      \tl_if_eq:nnTF { #1 } { inherit }
       {
         \cs_set:Nn \__glossaries_tree_child_desc_font:n
          {
            \__glossaries_tree_desc_font:n { ##1 }
          }
       }
       {
         \tl_if_empty:nTF { #1 }
          {
            \cs_set:Nn \__glossaries_tree_child_desc_font:n { ##1 }
          }
          {
            \cs_set:Nn \__glossaries_tree_child_desc_font:n
             {
               #1 { ##1 }
             }
          }
       }
    } ,
   location-font .code:n =
    {
      \tl_if_empty:nTF { #1 }
       {
         \cs_set:Nn \__glossaries_tree_loc_font:n { ##1 }
       }
       {
         \cs_set:Nn \__glossaries_tree_loc_font:n
          {
            #1 { ##1 }
          }
       }
    } ,
   child-location-font .code:n =
    {
      \tl_if_eq:nnTF { #1 } { inherit }
       {
         \cs_set:Nn \__glossaries_tree_child_loc_font:n
          {
            \__glossaries_tree_loc_font:n { ##1 }
          }
       }
       {
         \tl_if_empty:nTF { #1 }
          {
            \cs_set:Nn \__glossaries_tree_child_loc_font:n { ##1 }
          }
          {
            \cs_set:Nn \__glossaries_tree_child_loc_font:n
             {
               #1 { ##1 }
             }
          }
       }
    } ,
    name-symbol-sep .tl_set:N = \l__glossaries_tree_name_sym_sep_tl ,
    child-name-symbol-sep .code:n =
     {
       \tl_if_eq:nnTF { #1 } { inherit }
        {
          \tl_set:Nn \l__glossaries_tree_child_name_sym_sep_tl
           {
             \l__glossaries_tree_name_sym_sep_tl
           }
        }
        {
          \tl_set:Nn \l__glossaries_tree_child_name_sym_sep_tl { #1 }
        }
     } ,
    post-name-symbol .tl_set:N = \l__glossaries_tree_post_namesymbol_tl ,
    post-child-name-symbol .code:n =
     {
       \tl_if_eq:nnTF { #1 } { inherit }
        {
          \tl_set:Nn \l__glossaries_tree_post_child_namesymbol_tl
           {
             \l__glossaries_tree_post_namesymbol_tl
           }
        }
        {
          \tl_set:Nn \l__glossaries_tree_post_namesymbol_tl { #1 }
        }
     } ,
    pre-description .tl_set:N = \l__glossaries_tree_pre_desc_tl ,
    pre-child-description .code:n =
     {
       \tl_if_eq:nnTF { #1 } { inherit }
        {
          \tl_set:Nn \l__glossaries_tree_pre_child_desc_tl
           {
             \l__glossaries_tree_pre_desc_tl
           }
        }
        {
          \tl_set:Nn \l__glossaries_tree_pre_child_desc_tl { #1 }
        }
     } ,
    pre-location .tl_set:N = \l__glossaries_tree_pre_loc_tl ,
    pre-child-location .code:n =
     {
       \tl_if_eq:nnTF { #1 } { inherit }
        {
          \tl_set:Nn \l__glossaries_tree_pre_child_loc_tl
           {
             \l__glossaries_tree_pre_loc_tl
           }
        }
        {
          \tl_set:Nn \l__glossaries_tree_pre_child_loc_tl { #1 }
        }
     } ,
    post-location .tl_set:N = \l__glossaries_tree_post_loc_tl ,
    post-child-location .code:n =
     {
       \tl_if_eq:nnTF { #1 } { inherit }
        {
          \tl_set:Nn \l__glossaries_tree_post_child_loc_tl
           {
             \l__glossaries_tree_post_loc_tl
           }
        }
        {
          \tl_set:Nn \l__glossaries_tree_post_loc_tl { #1 }
        }
     } ,
    item-counter-width .code:n =
     {
       \tl_if_eq:nn { #1 } { natural }
        {
          \tl_clear:N \l__glossaries_tree_prenamesym_width_tl
        }
        {
          \tl_set:N \l__glossaries_tree_prenamesym_width_tl { #1 }
        }
     },
    item-counter-padding .code:n =
     {
       \tl_clear_new:N \l__glossaries_tree_itemcounter_padding_tl
       \tl_set:Nn \l__glossaries_tree_itemcounter_padding_tl { #1 }
     } ,
    sub-item-counter-width .code:n =
     {
       \tl_if_eq:nn { #1 } { natural }
        {
          \tl_clear:N \l__glossaries_tree_presubnamesym_width_tl
        }
        {
          \tl_set:N \l__glossaries_tree_presubnamesym_width_tl { #1 }
        }
     },
    sub-item-counter-padding .code:n =
     {
       \tl_clear_new:N \l__glossaries_tree_itemcounteri_padding_tl
       \tl_set:Nn \l__glossaries_tree_itemcounteri_padding_tl { #1 }
     } ,
    item-counter-align .choices:nn =
     { l , r , c }
     {
       \tl_set_eq:NN
         \l__glossaries_tree_prenamesym_align_tl
         \l_keys_choice_tl
     } ,
    sub-item-counter-align .choices:nn =
     { l , r , c }
     {
       \tl_set_eq:NN
         \l__glossaries_tree_presubnamesym_align_tl
         \l_keys_choice_tl
     } ,
    item-counter-font .code:n =
     {
       \tl_if_empty:nTF { #1 }
        {
          \cs_set_eq:NN \__glossaries_tree_prenamesym_font:n \use:n
        }
        {
          \cs_set:Nn \__glossaries_tree_prenamesym_font:n
           {
             { #1 { ##1 } }
           }
        }
     } ,
    sub-item-counter-font .code:n =
     {
       \tl_if_empty:nTF { #1 }
        {
          \cs_set_eq:NN \__glossaries_tree_presubnamesym_font:n \use:n
        }
        {
          \cs_set:Nn \__glossaries_tree_presubnamesym_font:n
           {
             { #1 { ##1 } }
           }
        }
     } ,
    name-width .code:n =
     {
       \glossaries_tree_set_name_width:nn { 0 } { #1 }
     } ,
    sub-name-width .code:n =
     {
       \glossaries_tree_set_name_width:nn { 1 } { #1 }
     } ,
    sub-sub-name-width .code:n =
     {
       \glossaries_tree_set_name_width:nn { 2 } { #1 }
     } ,
    name-align .choices:nn =
     { l , r , c }
     {
       \tl_set_eq:NN
         \l__glossaries_tree_namealign_tl
         \l_keys_choice_tl
     } ,
    widest-name .code:n =
     {
       \glossaries_tree_set_widest_name:nn { 0 } { #1 }
     } ,
    widest-sub-name .code:n =
     {
       \glossaries_tree_set_widest_name:nn { 1 } { #1 }
     } ,
    widest-sub-sub-name .code:n =
     {
       \glossaries_tree_set_widest_name:nn { 2 } { #1 }
     } ,
    update-widest-name .code:n =
     {
       \glossaries_tree_update_widest_name:nn { 0 } { #1 }
     } ,
    update-widest-sub-name .code:n =
     {
       \glossaries_tree_update_widest_name:nn { 1 } { #1 }
     } ,
    update-widest-sub-sub-name .code:n =
     {
       \glossaries_tree_update_widest_name:nn { 2 } { #1 }
     } ,
    symbol-width .code:n =
     {
       \glossaries_tree_set_symbol_width:nn { 0 } { #1 }
     } ,
    sub-symbol-width .code:n =
     {
       \glossaries_tree_set_symbol_width:nn { 1 } { #1 }
     } ,
    sub-sub-symbol-width .code:n =
     {
       \glossaries_tree_set_symbol_width:nn { 2 } { #1 }
     } ,
    symbol-align .choices:nn =
     { l , r , c }
     {
       \tl_set_eq:NN
         \l__glossaries_tree_symbolalign_tl
         \l_keys_choice_tl
     } ,
    widest-symbol .code:n =
     {
       \glossaries_tree_set_widest_symbol:nn { 0 } { #1 }
     } ,
    widest-sub-symbol .code:n =
     {
       \glossaries_tree_set_widest_symbol:nn { 1 } { #1 }
     } ,
    widest-sub-sub-symbol .code:n =
     {
       \glossaries_tree_set_widest_symbol:nn { 2 } { #1 }
     } ,
    update-widest-symbol .code:n =
     {
       \glossaries_tree_update_widest_symbol:nn { 0 } { #1 }
     } ,
    update-widest-sub-symbol .code:n =
     {
       \glossaries_tree_update_widest_symbol:nn { 1 } { #1 }
     } ,
    update-widest-sub-sub-symbol .code:n =
     {
       \glossaries_tree_update_widest_symbol:nn { 2 } { #1 }
     } ,
    name-symbol-width .code:n =
     {
       \glossaries_tree_set_name_symbol_width:nn { 0 } { #1 }
     } ,
    sub-name-symbol-width .code:n =
     {
       \glossaries_tree_set_name_symbol_width:nn { 1 } { #1 }
     } ,
    sub-sub-name-symbol-width .code:n =
     {
       \glossaries_tree_set_name_symbol_width:nn { 2 } { #1 }
     } ,
    name-symbol-align .choices:nn =
     { l , r , c }
     {
       \tl_set_eq:NN
         \l__glossaries_tree_namesymbolalign_tl
         \l_keys_choice_tl
     } ,
 }
\tl_new:N \l__glossaries_tree_par_setup_tl
\tl_new:N \l__glossaries_tree_group_title_tl
\int_new:N \l__glossaries_tree_level_int
\newglossarystyle{tree*}
 {
   \renewenvironment { theglossary }
    { \__glossaries_tree_begin: }
    { \__glossaries_tree_end: }
   \cs_set_eq:NN \glossaryheader \__glossaries_tree_header:
   \cs_set_eq:NN \glsgroupheading \__glossaries_tree_group_heading:n
   \cs_set_eq:NN \glssubgroupheading \__glossaries_tree_group_heading:nnnn
   \cs_set_eq:NN \glossentry \__glossaries_tree_item:nn
   \cs_set_eq:NN \subglossentry \__glossaries_tree_subitem:nnn
   \tl_set:Nn \glsgroupskip
    {
      \legacy_if:nF { glsnogroupskip }
       { \par \skip_vertical:n { \l__glossaries_tree_group_skip_tl } }
    }
 }
\cs_new:Nn \__glossaries_tree_bookmark_group:nnn
 {
   \tl_if_exist:cTF { toclevel@ \@@glossarysec }
    {
      \exp_args:Ne \glossaries_tree_bookmark_group:nnn
       {
         \int_eval:n
          {
            \tl_use:c { toclevel@ \@@glossarysec } + \c_one_int + #1
          }
       }
       { #2 } { #3 }
    }
    {
      \exp_args:Ne \glossaries_tree_bookmark_group:nnn
       { \int_eval:n { \c_one_int + #1 } }
       { #2 } { #3 }
    }
 }
\cs_new:Nn \__glossaries_tree_pregrouphead:nnn { }
\cs_new:Nn \__glossaries_tree_group_heading:n
 {
   \bool_if:NTF \l__glossaries_tree_group_headings_bool
    {
      \cs_if_exist:NTF \glsxtrgetgrouptitle
       {
         \glsxtrgetgrouptitle { #1 } \l__glossaries_tree_group_title_tl
       }
       {
         \@gls@getgrouptitle { #1 } \l__glossaries_tree_group_title_tl
       }
      \exp_args:NnV \__glossaries_tree_group_heading:nnn { #1 }
       \l__glossaries_tree_group_title_tl
       { \c_zero_int }
    }
    {
      \int_zero:N \l__glossaries_tree_level_int
    }
 }
\cs_new:Nn \__glossaries_tree_group_heading:nnnn
 {
   \bool_if:NTF \l__glossaries_tree_group_headings_bool
    {
      \cs_if_exist:NTF \glsxtrgetgrouptitle
       {
         \glsxtrgetgrouptitle { #4 } \l__glossaries_tree_group_title_tl
       }
       {
         \@gls@getgrouptitle { #4 } \l__glossaries_tree_group_title_tl
       }
      \exp_args:Nne \__glossaries_tree_group_heading:nnn { #1 }
       {
         \glossaries_tree_subgroup_title:nn { #3 }
           { \exp_not:V \l__glossaries_tree_group_title_tl }
       }
       { #2 }
    }
    {
      \int_set:Nn \l__glossaries_tree_level_int { #2 }
    }
 }
\cs_new:Nn \__glossaries_tree_group_heading:nnn
 {
   \par
   \group_begin:
    \everypar { }
    \dim_zero:N \parindent
    \dim_zero:N \hangindent
    \dim_zero:N \parskip
    \int_set:Nn \l__glossaries_tree_level_int { #3 }
    \__glossaries_tree_pregrouphead:nnn
      { \l__glossaries_tree_level_int } { #1 } { #2 }
    \int_if_zero:nTF { \l__glossaries_tree_level_int }
     {
       \tl_set:Nn \l__glossaries_tree_group_title_tl
        {
          \__glossaries_tree_header_font:n { #2 }
        }
     }
     {
       \tl_set:Nn \l__glossaries_tree_group_title_tl
        {
          \__glossaries_tree_sub_header_font:n { #2 }
        }
     }
    \bool_if:NT \l__glossaries_tree_hypernav_bool
      {
        \tl_set:Ne \l__glossaries_tree_group_title_tl
         {
           \exp_not:N \glsnavhypertarget { #1 }
             { \exp_not:V \l__glossaries_tree_group_title_tl }
         }
      }
    \int_if_zero:nTF { \l__glossaries_tree_level_int }
     {
       \__glossaries_tree_header_fmt:n
        {
          \l__glossaries_tree_group_title_tl
        }
     }
     {
       \glossaries_tree_pre_subgroup:nn { #1 } { #3 }
       \__glossaries_tree_sub_header_fmt:n
        {
          \l__glossaries_tree_group_title_tl
        }
     }
    \nopagebreak
    \tl_if_empty:NF \l__glossaries_tree_postgrouphead_skip_tl
     {
       \skip_vertical:n { \l__glossaries_tree_postgrouphead_skip_tl }
     }
    \par
    \@afterheading
   \expandafter
   \group_end:
     \if@endpe \@doendpe \fi
 }
\cs_new:Nn \__glossaries_tree_begin:
 {
   \tl_if_empty:NF \l__glossaries_tree_offset_tl
    {
      \dim_set:Nn \l__glossaries_tree_offset_dim
       { \l__glossaries_tree_offset_tl }
    }
   \__glossaries_tree_init_namesymbolwidths:
   \bool_if:NT \l__glossaries_tree_hide_groups_bool
    {
      \bool_set_false:N \l__glossaries_tree_group_headings_bool
      \legacy_if_set_true:n { glsnogroupskip }
    }
   \int_set:Nn \l__glossaries_tree_level_int { -1 }
   \tl_clear:N \l__glossaries_tree_par_setup_tl
   \tl_if_empty:NT \l__glossaries_tree_parindent_tl
    {
      \tl_if_empty:NTF \l__glossaries_tree_hangindent_tl
       {
        \tl_set:Ne  \l__glossaries_tree_parindent_tl
          { \dim_use:N \parindent }
       }
       {
        \tl_set:Ne  \l__glossaries_tree_parindent_tl
          { \dim_eval:n { \parindent + \l__glossaries_tree_hangindent_tl } }
       }
    }
   \tl_put_right:Nn \l__glossaries_tree_par_setup_tl
    {
      \dim_set:Nn \parindent
        {
          \l__glossaries_tree_level_int
             \l__glossaries_tree_offset_dim
          + \l__glossaries_tree_parindent_tl
        }
    }
   \tl_if_empty:NF \l__glossaries_tree_parskip_tl
    {
      \tl_put_right:Nn \l__glossaries_tree_par_setup_tl
       {
         \skip_set:Nn \parskip { \l__glossaries_tree_parskip_tl }
       }
    }
   \tl_if_empty:NT \l__glossaries_tree_hangindent_tl
    {
      \tl_set:Nn \l__glossaries_tree_hangindent_tl { \c_zero_dim }
    }
   \tl_put_right:Nn \l__glossaries_tree_par_setup_tl
    {
      \everypar
       {
         \int_compare:nNnF { \l__glossaries_tree_level_int } < { \c_zero_int }
          {
            \dim_set:Nn \hangindent
             {
               \l__glossaries_tree_level_int
                  \l__glossaries_tree_offset_dim
               + \l__glossaries_tree_hangindent_tl
             }
          }
       }
    }
 }
\cs_new:Nn \__glossaries_tree_end: { \strut \par }
\cs_new:Nn \__glossaries_tree_item:nn
 {
   \int_zero:N \l__glossaries_tree_level_int
   \dim_set:Nn \parindent { \c_zero_dim }
   \par
   \dim_set:Nn \hangindent
    {
      \l__glossaries_tree_hangindent_tl
    }
   \glossaries_tree_pre_item:nnn { 0 } { #1 } { #2 }
   \__glossaries_tree_namesymbox:n
    {
     \__glossaries_tree_prenamesym:n
      {
        \__glossaries_tree_prenamesym_font:n
         {
           \glsentryitem { #1 }
         }
      }
     \ifglshassymbol { #1 }
      {
       \__glossaries_tree_name_sym_item:nnn
        { #1 }
        {
          \__glossaries_tree_namebox:n
           {
             \__glossaries_tree_name_font:n
              {
                \__glossaries_tree_name_encap:n
                 { \__glossaries_tree_gloss_name:n { #1 } }
              }
           }
        }
        {
          \__glossaries_tree_symbolbox:n
           {
             \__glossaries_tree_symbol_font:n
              {
                \__glossaries_tree_symbol_encap:n
                 { \__glossaries_tree_gloss_symbol:n { #1 } }
              }
           }
        }
      }
      {
       \__glossaries_tree_name_sym_item:nnn
        { #1 }
        {
          \__glossaries_tree_namebox:n
           {
            \__glossaries_tree_name_font:n
             {
               \__glossaries_tree_name_encap:n
                { \__glossaries_tree_gloss_name:n { #1 } }
             }
           }
        }
        { }
      }
     \__glossaries_tree_show_desc:nn { #1 }
      {
        \l__glossaries_tree_post_namesymbol_tl
      }
    }
   \l__glossaries_tree_par_setup_tl
   \__glossaries_tree_show_desc:nn { #1 }
    {
      \__glossaries_tree_desc_font:n
       {
         \l__glossaries_tree_pre_desc_tl
         \__glossaries_tree_gloss_desc:n { #1 }
       }
    }
   \__glossaries_tree_show_loc:nnn { #1 } { #2 }
    {
      \l__glossaries_tree_pre_loc_tl
      \__glossaries_tree_loc_font:n { #2 }
      \l__glossaries_tree_post_loc_tl
    }
   \glossaries_tree_post_item:nnn { 0 } { #1 } { #2 }
 }
\cs_new:Nn \__glossaries_tree_subitem:nnn
 {
   \int_set:Nn \l__glossaries_tree_level_int { #1 }
   \dim_set:Nn \parindent
    {
      \l__glossaries_tree_level_int
       \l__glossaries_tree_offset_dim
    }
   \par
   \dim_set:Nn \hangindent
    {
      \l__glossaries_tree_level_int
        \l__glossaries_tree_offset_dim
      + \l__glossaries_tree_hangindent_tl
    }
   \glossaries_tree_pre_item:nnn { #1 } { #2 } { #3 }
   \exp_args:Ne \__glossaries_tree_namesymbox:nn
    { \romannumeral #1 }
    {
     \int_compare:nNnT { #1 } = { \c_one_int }
      {
       \__glossaries_tree_presubnamesym:n
        {
          \__glossaries_tree_presubnamesym_font:n
           {
             \glssubentryitem { #2 }
           }
        }
      }
     \ifglshassymbol { #2 }
      {
       \__glossaries_tree_name_sym_subitem:nnn
        { #2 }
        {
          \exp_args:Ne \__glossaries_tree_namebox:nn
           { \romannumeral #1 }
           {
            \__glossaries_tree_child_name_font:n
             {
               \__glossaries_tree_child_name_encap:n
                { \__glossaries_tree_child_gloss_name:n { #2 } }
             }
           }
        }
        {
          \exp_args:Ne \__glossaries_tree_symbolbox:nn
           { \romannumeral #1 }
           {
             \__glossaries_tree_child_symbol_font:n
              {
               \__glossaries_tree_child_symbol_encap:n
                { \__glossaries_tree_child_gloss_symbol:n { #2 } }
              }
           }
        }
      }
      {
       \__glossaries_tree_name_sym_subitem:nnn
        { #2 }
        {
          \exp_args:Ne \__glossaries_tree_namebox:nn
            { \romannumeral #1 }
           {
             \__glossaries_tree_child_name_font:n
              {
               \__glossaries_tree_child_name_encap:n
                { \__glossaries_tree_child_gloss_name:n { #2 } }
              }
           }
        }
        { }
      }
     \__glossaries_tree_show_child_desc:nn { #2 }
      {
        \l__glossaries_tree_post_child_namesymbol_tl
      }
    }
   \l__glossaries_tree_par_setup_tl
   \__glossaries_tree_show_child_desc:nn { #2 }
    {
      \__glossaries_tree_child_desc_font:n
       {
         \l__glossaries_tree_pre_child_desc_tl
         \__glossaries_tree_child_gloss_desc:n { #2 }
       }
    }
   \__glossaries_tree_show_child_loc:nnn { #1 } { #3 }
    {
      \l__glossaries_tree_pre_child_loc_tl
      \__glossaries_tree_child_loc_font:n { #3 }
      \l__glossaries_tree_post_loc_tl
    }
   \glossaries_tree_post_item:nnn { #1 } { #2 } { #3 }
 }
\cs_new:Nn \__glossaries_tree_header:
 {
  \bool_if:NT \l__glossaries_tree_hypernav_bool
   {
     \group_begin:
      \everypar { }
      \dim_zero:N \parindent
       \__glossaries_tree_hypernav_fmt:n
        {
          \__glossaries_tree_hypernav_font:n { \glsnavigation }
          \par
        }
       \skip_vertical:n { \l__glossaries_tree_hypernav_skip_tl }
       \@afterheading
     \expandafter
     \group_end:
       \if@endpe \@doendpe \fi
   }
 }
\ExplSyntaxOff
\providecommand{\indexspace}{%
  \par \vskip 10\p@ \@plus 5\p@ \@minus 3\p@ \relax
}
\newcommand*{\glstreenamefmt}[1]{\textbf{#1}}
\newcommand*{\glstreegroupheaderfmt}[1]{\glstreenamefmt{#1}}
\newcommand*{\glstreenavigationfmt}[1]{\glstreenamefmt{#1}}
\ifdef\@idxitem
{\newcommand{\glstreeitem}{\@idxitem}}
{\newcommand{\glstreeitem}{\par\hangindent40\p@}}
\ifdef\subitem
{\let\glstreesubitem\subitem}
{\newcommand\glstreesubitem{\glstreeitem\hspace*{20\p@}}}
\ifdef\subsubitem
{\let\glstreesubsubitem\subsubitem}
{\newcommand\glstreesubsubitem{\glstreeitem\hspace*{30\p@}}}
\newcommand{\glstreepredesc}{\space}
\newcommand{\glstreechildpredesc}{\space}
\newglossarystyle{index}{%
  \renewenvironment{theglossary}%
    {\setlength{\parindent}{0pt}%
     \setlength{\parskip}{0pt plus 0.3pt}%
     \let\item\glstreeitem
     \let\subitem\glstreesubitem
     \let\subsubitem\glstreesubsubitem
    }%
    {\par}%
  \renewcommand*{\glossaryheader}{}%
  \renewcommand*{\glsgroupheading}[1]{}%
  \renewcommand*{\glossentry}[2]{%
     \item\glsentryitem{##1}\glstreenamefmt{\glstarget{##1}{\glossentryname{##1}}}%
     \ifglshassymbol{##1}{\space(\glossentrysymbol{##1})}{}%
     \glstreepredesc \glossentrydesc{##1}\glspostdescription\space ##2%
  }%
  \renewcommand{\subglossentry}[3]{%
    \ifcase##1\relax
      % level 0
      \item
    \or
      % level 1
      \subitem
      \glssubentryitem{##2}%
    \else
      % all other levels
      \subsubitem
    \fi
    \glstreenamefmt{\glstarget{##2}{\glossentryname{##2}}}%
    \ifglshassymbol{##2}{\space(\glossentrysymbol{##2})}{}%
    \glstreechildpredesc\glossentrydesc{##2}\glspostdescription\space ##3%
  }%
  \renewcommand*{\glsgroupskip}{\ifglsnogroupskip\else\indexspace\fi}}
\newglossarystyle{indexgroup}{%
  \setglossarystyle{index}%
  \renewcommand*{\glsgroupheading}[1]{%
    \item\glstreegroupheaderfmt{\glsgetgrouptitle{##1}}%
    \indexspace
  }%
}
\newglossarystyle{indexhypergroup}{%
  \setglossarystyle{index}%
  \renewcommand*{\glossaryheader}{%
    \item\glstreenavigationfmt{\glsnavigation}\indexspace}%
  \renewcommand*{\glsgroupheading}[1]{%
    \item\glstreegroupheaderfmt
      {\glsnavhypertarget{##1}{\glsgetgrouptitle{##1}}}%
    \indexspace}%
}
\newglossarystyle{tree}{%
  \renewenvironment{theglossary}%
    {\setlength{\parindent}{0pt}%
     \setlength{\parskip}{0pt plus 0.3pt}}%
    {}%
  \renewcommand*{\glossaryheader}{}%
  \renewcommand*{\glsgroupheading}[1]{}%
  \renewcommand{\glossentry}[2]{%
    \hangindent0pt\relax
    \parindent0pt\relax
    \glsentryitem{##1}\glstreenamefmt{\glstarget{##1}{\glossentryname{##1}}}%
    \ifglshassymbol{##1}{\space(\glossentrysymbol{##1})}{}%
    \glstreepredesc\glossentrydesc{##1}\glspostdescription\space##2\par
  }%
  \renewcommand{\subglossentry}[3]{%
    \hangindent##1\glstreeindent\relax
    \parindent##1\glstreeindent\relax
    \ifnum##1=1\relax
      \glssubentryitem{##2}%
    \fi
    \glstreenamefmt{\glstarget{##2}{\glossentryname{##2}}}%
    \ifglshassymbol{##2}{\space(\glossentrysymbol{##2})}{}%
    \glstreechildpredesc\glossentrydesc{##2}\glspostdescription\space ##3\par
  }%
  \renewcommand*{\glsgroupskip}{\ifglsnogroupskip\else\indexspace\fi}}
\newglossarystyle{treegroup}{%
  \setglossarystyle{tree}%
  \renewcommand{\glsgroupheading}[1]{\par
    \noindent\glstreegroupheaderfmt{\glsgetgrouptitle{##1}}\par
    \indexspace}%
}
\newglossarystyle{treehypergroup}{%
  \setglossarystyle{tree}%
  \renewcommand*{\glossaryheader}{%
    \par\noindent\glstreenavigationfmt{\glsnavigation}\par\indexspace}%
  \renewcommand*{\glsgroupheading}[1]{%
    \par\noindent
    \glstreegroupheaderfmt
      {\glsnavhypertarget{##1}{\glsgetgrouptitle{##1}}}\par
    \indexspace}%
}
\newlength\glstreeindent
\setlength{\glstreeindent}{10pt}
\newglossarystyle{treenoname}{%
  \renewenvironment{theglossary}%
    {\setlength{\parindent}{0pt}%
     \setlength{\parskip}{0pt plus 0.3pt}}%
    {}%
  \renewcommand*{\glossaryheader}{}%
  \renewcommand*{\glsgroupheading}[1]{}%
  \renewcommand{\glossentry}[2]{%
    \hangindent0pt\relax
    \parindent0pt\relax
    \glsentryitem{##1}\glstreenamefmt{\glstarget{##1}{\glossentryname{##1}}}%
    \ifglshassymbol{##1}{\space(\glossentrysymbol{##1})}{}%
    \glstreepredesc\glossentrydesc{##1}\glspostdescription\space##2\par
  }%
  \renewcommand{\subglossentry}[3]{%
    \hangindent##1\glstreeindent\relax
    \parindent##1\glstreeindent\relax
    \ifnum##1=1\relax
      \glssubentryitem{##2}%
    \fi
    \glstarget{##2}{\strut}%
    \glossentrydesc{##2}\glspostdescription\space##3\par
  }%
  \renewcommand*{\glsgroupskip}{\ifglsnogroupskip\else\indexspace\fi}%
}
\newglossarystyle{treenonamegroup}{%
  \setglossarystyle{treenoname}%
  \renewcommand{\glsgroupheading}[1]{\par
    \noindent\glstreegroupheaderfmt
      {\glsgetgrouptitle{##1}}\par\indexspace}%
}
\newglossarystyle{treenonamehypergroup}{%
  \setglossarystyle{treenoname}%
  \renewcommand*{\glossaryheader}{%
    \par\noindent\glstreenavigationfmt{\glsnavigation}\par\indexspace}%
  \renewcommand*{\glsgroupheading}[1]{%
    \par\noindent
    \glstreegroupheaderfmt
      {\glsnavhypertarget{##1}{\glsgetgrouptitle{##1}}}\par
    \indexspace}%
}
\newrobustcmd*{\glsfindwidesttoplevelname}[1][\@glo@types]{%
  \dimen@=0pt\relax
  \gls@tmplen=0pt\relax
  \forallglossaries[#1]{\@gls@type}%
  {%
    \forglsentries[\@gls@type]{\@glo@label}%
    {%
      \ifglshasparent{\@glo@label}%
      {}%
      {%
        \glsmeasurewidth{\dimen@}%
         {\glstreenamefmt{\glsentryname{\@glo@label}}}%
        \ifdim\dimen@>\gls@tmplen
          \gls@tmplen=\dimen@
          \letcs{\@glswidestname}{glo@\glsdetoklabel{\@glo@label}@name}%
        \fi
      }%
    }%
  }%
}
\ExplSyntaxOn
\NewDocumentCommand \glssetwidest { O{0} m }
{
  \glossaries_tree_set_widest_name:nn { #1 } { #2 }
}
\ExplSyntaxOff
\newcommand*{\@glswidestname}{}
\newcommand*{\glstreenamebox}[2]{%
  \makebox[#1][l]{#2}%
}
\newglossarystyle{alttree}{%
  \renewenvironment{theglossary}%
    {\def\@gls@prevlevel{-1}%
     \mbox{}\par}%
    {\par}%
  \renewcommand*{\glossaryheader}{}%
  \renewcommand*{\glsgroupheading}[1]{}%
  \renewcommand{\glossentry}[2]{%
    \ifnum\@gls@prevlevel=0\relax
    \else
       \glsmeasurewidth{\glstreeindent}{\glstreenamefmt{\@glswidestname\space}}%
    \fi
    \hangindent\glstreeindent
    \parindent\glstreeindent
    \makebox[0pt][r]{\glstreenamebox{\glstreeindent}{%
       \glsentryitem{##1}\glstreenamefmt{\glstarget{##1}{\glossentryname{##1}}}}}%
    \ifglshassymbol{##1}{(\glossentrysymbol{##1})\space}{}%
    \glossentrydesc{##1}\glspostdescription \space ##2\par
    \def\@gls@prevlevel{0}%
  }%
  \renewcommand{\subglossentry}[3]{%
    \ifnum##1=1\relax
      \glssubentryitem{##2}%
    \fi
    \ifnum\@gls@prevlevel=##1\relax
    \else
      \@ifundefined{@glswidestname\romannumeral##1}{%
        \glsmeasurewidth{\gls@tmplen}{\glstreenamefmt{\@glswidestname\space}}}{%
        \glsmeasurewidth{\gls@tmplen}{\glstreenamefmt{%
           \csname @glswidestname\romannumeral##1\endcsname\space}}}%
      \ifnum\@gls@prevlevel<##1\relax
         \setlength\glstreeindent\gls@tmplen
         \addtolength\glstreeindent\parindent
         \parindent\glstreeindent
      \else
         \@ifundefined{@glswidestname\romannumeral\@gls@prevlevel}{%
           \glsmeasurewidth{\glstreeindent}{\glstreenamefmt{%
              \@glswidestname\space}}}{%
           \glsmeasurewidth{\glstreeindent}{\glstreenamefmt{%
              \csname @glswidestname\romannumeral\@gls@prevlevel
                 \endcsname\space}}}%
         \addtolength\parindent{-\glstreeindent}%
         \setlength\glstreeindent\parindent
      \fi
    \fi
    \hangindent\glstreeindent
    \makebox[0pt][r]{\glstreenamebox{\gls@tmplen}{%
      \glstreenamefmt{\glstarget{##2}{\glossentryname{##2}}}}}%
    \ifglshassymbol{##2}{(\glossentrysymbol{##2})\space}{}%
    \glossentrydesc{##2}\glspostdescription\space ##3\par
    \def\@gls@prevlevel{##1}%
  }%
  \renewcommand*{\glsgroupskip}{\ifglsnogroupskip\else\indexspace\fi}%
}
\newglossarystyle{alttreegroup}{%
  \setglossarystyle{alttree}%
  \renewcommand{\glsgroupheading}[1]{\par
    \def\@gls@prevlevel{-1}%
    \hangindent0pt\relax
    \parindent0pt\relax
    \glstreegroupheaderfmt{\glsgetgrouptitle{##1}}%
    \par\indexspace}%
}
\newglossarystyle{alttreehypergroup}{%
  \setglossarystyle{alttree}%
  \renewcommand*{\glossaryheader}{%
    \par
    \def\@gls@prevlevel{-1}%
    \hangindent0pt\relax
    \parindent0pt\relax
    \glstreenavigationfmt{\glsnavigation}\par\indexspace}%
  \renewcommand*{\glsgroupheading}[1]{%
    \par
    \def\@gls@prevlevel{-1}%
    \hangindent0pt\relax
    \parindent0pt\relax
    \glstreegroupheaderfmt
     {\glsnavhypertarget{##1}{\glsgetgrouptitle{##1}}}\par
    \indexspace}}
\endinput
%%
%% End of file `glossary-tree.sty'.
