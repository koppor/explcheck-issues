%%
%% This is file `postnotes.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% postnotes.dtx  (with options: `package')
%% 
%% This file was generated from file(s) of the LaTeX package "postnotes".
%% 
%% Copyright (C) 2022-2024  gusbrs
%% 
%% It may be distributed and/or modified under the conditions of the
%% LaTeX Project Public License (LPPL), either version 1.3c of this
%% license or (at your option) any later version.  The latest version
%% of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% and version 1.3 or later is part of all distributions of LaTeX
%% version 2005/12/01 or later.
%% 
%% 
%% This work is "maintained" (as per LPPL maintenance status) by gusbrs.
%% 
%% This work consists of the files postnotes.dtx,
%%                                 postnotes.ins,
%%                                 postnotes-doc.tex,
%%                                 postnotes-code.tex,
%%                   and the files generated from them.
%% 
%% The released version of this package is available from CTAN.
%% 
%% -----------------------------------------------------------------------
%% 
%% The development version of the package can be found at
%% 
%%    https://github.com/gusbrs/postnotes
%% 
%% for those people who are interested.
%% 
%% -----------------------------------------------------------------------
%% 
\def\postnotes@required@kernel{2024-06-01}
\NeedsTeXFormat{LaTeX2e}[\postnotes@required@kernel]
\providecommand\IfFormatAtLeastTF{\@ifl@t@r\fmtversion}
\IfFormatAtLeastTF{\postnotes@required@kernel}
  {}
  {%
    \PackageError{postnotes}{LaTeX kernel too old}
      {%
        'postnotes' requires a LaTeX kernel \postnotes@required@kernel\space or newer.%
      }%
  }%
\ProvidesExplPackage {postnotes} {2024-12-05} {0.5.1}
  {Endnotes for LaTeX}
\tl_new:N \l__postnotes_tmpa_tl
\tl_new:N \l__postnotes_tmpb_tl
\seq_new:N \l__postnotes_tmpa_seq
\seq_new:N \l__postnotes_tmpb_seq
\box_new:N \l__postnotes_tmpa_box
\cs_new:Npn \__postnotes_data_name:n #1
  { g__postnotes_ #1 _data_prop }
\cs_generate_variant:Nn \__postnotes_data_name:n { e }
\NewHook { postnotes/note/store }
\cs_new_protected:Npn \__postnotes_store:nn #1#2
  {
    \prop_new:c { \__postnotes_data_name:e {#1} }
    \prop_gput:cnn { \__postnotes_data_name:e {#1} } { type } { note }
    \prop_gput:cnV { \__postnotes_data_name:e {#1} } { mark }
      \l__postnotes_mark_tl
    \prop_gput:cne { \__postnotes_data_name:e {#1} } { counter }
      { \int_use:N \c@postnote }
    \prop_gput:cne { \__postnotes_data_name:e {#1} } { sortnum }
      {
        \bool_if:NTF \l__postnotes_manual_sortnum_bool
          { \fp_use:N \l__postnotes_sort_num_fp }
          { \int_use:N \c@postnote }
      }
    \cs_if_exist:cT { chapter }
      {
        \protected@edef \l__postnotes_tmpa_tl { \thechapter }
        \prop_gput:cnV { \__postnotes_data_name:e {#1} }
          { thechapter } \l__postnotes_tmpa_tl
      }
    \protected@edef \l__postnotes_tmpa_tl { \thesection }
    \prop_gput:cnV { \__postnotes_data_name:e {#1} } { thesection }
      \l__postnotes_tmpa_tl
    \prop_gput:cnV { \__postnotes_data_name:e {#1} } { pnsectname }
      \g__postnotes_section_name_tl
    \prop_gput:cne { \__postnotes_data_name:e {#1} } { pnsectid }
      { \int_use:N \g__postnotes_sectid_int }
    \prop_gput:cne { \__postnotes_data_name:e {#1} } { multibool }
      { \bool_to_str:N \l__postnotes_maybe_multi_bool }
    \prop_gput:cnn { \__postnotes_data_name:e {#1} } { content } {#2}
    \tl_clear:N \l__postnotes_tmpa_tl
    \UseHook { postnotes/note/store }
  }
\cs_new_protected:Npn \__postnotes_store_section:nn #1#2
  {
    \prop_new:c { \__postnotes_data_name:e {#1} }
    \prop_gput:cnn { \__postnotes_data_name:e {#1} } { type } { section }
    \cs_if_exist:cT { chapter }
      {
        \protected@edef \l__postnotes_tmpa_tl { \thechapter }
        \prop_gput:cnV { \__postnotes_data_name:e {#1} }
          { thechapter } \l__postnotes_tmpa_tl
      }
    \protected@edef \l__postnotes_tmpa_tl { \thesection }
    \prop_gput:cnV { \__postnotes_data_name:e {#1} } { thesection }
      \l__postnotes_tmpa_tl
    \prop_gput:cnn { \__postnotes_data_name:e {#1} } { content } {#2}
    \tl_clear:N \l__postnotes_tmpa_tl
  }
\cs_generate_variant:Nn \__postnotes_store_section:nn { nV }
\cs_new_protected:Npn \__postnotes_prop_get:nnN #1#2#3
  {
    \prop_get:cnNF { \__postnotes_data_name:e {#1} } {#2} #3
      { \tl_clear:N #3 }
  }
\cs_new:Npn \__postnotes_prop_item:nn #1#2
  { \prop_item:cn { \__postnotes_data_name:e {#1} } {#2} }
\cs_new_protected:Npn \__postnotes_prop_gclear:n #1
  { \prop_gclear:c { \__postnotes_data_name:e {#1} } }
\tl_const:Nn \c__postnotes_ref_prefix_tl { postnote@r }
\seq_new:N \g__postnotes_labelseq_seq
\int_new:N \g__postnotes_postnote_counteraux_int
\prop_new:N \g__postnotes_counteraux_prop
\bool_new:N \g__postnotes_firstrun_bool
\bool_gset_true:N \g__postnotes_firstrun_bool
\cs_new_protected:Npn \__postnotes_store_labelseq:nn #1#2
  { \seq_gput_right:Nn \g__postnotes_labelseq_seq { {#1} {#2} } }
\cs_new_protected:Npn \__postnotes_step_counteraux:nnn #1#2#3
  {
    \bool_lazy_and:nnT
      { \g__postnotes_counteraux_bool }
      { \str_if_eq_p:nn {#1} { mark } }
      {
        \int_gadd:Nn \g__postnotes_postnote_counteraux_int { #3 }
        \prop_gput:Nne \g__postnotes_counteraux_prop { #2 }
          { \int_use:N \g__postnotes_postnote_counteraux_int }
      }
  }
\cs_new_protected:Npe \post@note #1#2#3#4
  {
    \exp_not:N \bool_gset_false:N \exp_not:N \g__postnotes_firstrun_bool
    \exp_not:N \__postnotes_store_labelseq:nn { #1 } { #2 }
    \exp_not:N \__postnotes_step_counteraux:nnn { #1 } { #2 } { #4 }
    \exp_not:N \@newl@bel { \c__postnotes_ref_prefix_tl } { #1 @ #2 } { #3 }
  }
\AddToHook { begindocument }
  {
    \legacy_if:nT { @filesw }
      {
        \iow_now:Ne \@mainaux
          {
            \token_to_str:N \providecommand
            \token_to_str:N \post@note [4] { }
          }
        \iow_now:Ne \@mainaux
          {
            \token_to_str:N \providecommand
            \token_to_str:N \postnote@setcounteraux [1] { }
          }
        \iow_now:Ne \@mainaux
          {
            \token_to_str:N \providecommand
            \token_to_str:N \postnote@addtocounteraux [1] { }
          }
      }
  }
\AddToHook { include/before }
  {
    \legacy_if:nT { @filesw }
      {
        \iow_now:Ne \@mainaux
          {
            \token_to_str:N \providecommand
            \token_to_str:N \post@note [4] { }
          }
        \iow_now:Ne \@mainaux
          {
            \token_to_str:N \providecommand
            \token_to_str:N \postnote@setcounteraux [1] { }
          }
        \iow_now:Ne \@mainaux
          {
            \token_to_str:N \providecommand
            \token_to_str:N \postnote@addtocounteraux [1] { }
          }
      }
  }
\cs_new_protected:Npn \__postnotes_set_label:nnnn #1#2#3#4
  {
    \legacy_if:nT { @filesw }
      {
        \protected@write \@auxout { }
          { \token_to_str:N \post@note { #1 } { #2 } { #3 } { #4 } }
      }
  }
\cs_new_protected:Npn \__postnotes_set_mark_page_label:nn #1#2
  { \__postnotes_set_label:nnnn { mark } { #1 } { \thepage } { #2 } }
\cs_generate_variant:Nn \__postnotes_set_mark_page_label:nn { ee }
\cs_new_protected:Npn \__postnotes_set_section_page_label:n #1
  { \__postnotes_set_label:nnnn { section } { #1 } { \thepage } { } }
\cs_generate_variant:Nn \__postnotes_set_section_page_label:n { e }
\cs_new_protected:Npn \__postnotes_set_print_label:n #1
  { \__postnotes_set_label:nnnn { print } { #1 } { } { } }
\cs_generate_variant:Nn \__postnotes_set_print_label:n { e }
\cs_new_protected:Npn \__postnotes_get_pageref:Nn #1#2
  {
    \cs_if_exist:cTF { \c__postnotes_ref_prefix_tl @ #2 }
      { \tl_set:Nv #1 { \c__postnotes_ref_prefix_tl @ #2 } }
      { \tl_clear:N #1 }
  }
\cs_generate_variant:Nn \__postnotes_get_pageref:Nn { Ne }
\cs_new:Npn \__postnotes_extract_pageref:n #1
  {
    \cs_if_exist:cTF { \c__postnotes_ref_prefix_tl @ #1 }
      { \exp_not:v { \c__postnotes_ref_prefix_tl @ #1 } }
      { \c_empty_tl }
  }
\cs_generate_variant:Nn \__postnotes_extract_pageref:n { e }
\keys_define:nn { postnotes/setup }
  {
    heading .cs_set_protected:Np = \pnheading ,
    heading .value_required:n = true ,
  }
\cs_if_exist:cTF { chapter }
  {
    \cs_new_protected:Npn \pnheading
      {
        \chapter*{\pntitle}
        \@mkboth{\pnheaderdefault}{\pnheaderdefault}
      }
  }
  {
    \cs_new_protected:Npn \pnheading
      {
        \section*{\pntitle}
        \@mkboth{\pnheaderdefault}{\pnheaderdefault}
      }
  }
\NewDocumentCommand \pnheaderdefault {}
  {
    \group_begin:
    \protected@edef \l__postnotes_tmpa_tl { \FirstMark{postnotes/page} }
    \protected@edef \l__postnotes_tmpb_tl { \LastMark{postnotes/page}  }
    \tl_if_eq:NNTF \l__postnotes_tmpa_tl \l__postnotes_tmpb_tl
      { \pnhdnotes{}~\pnhdtopage{}~ \FirstMark{postnotes/page} }
      {
        \pnhdnotes{}~\pnhdtopages{}~
        \FirstMark{postnotes/page}--\LastMark{postnotes/page}
      }
    \group_end:
  }
\tl_new:N \l__postnotes_print_format_tl
\keys_define:nn { postnotes/setup }
  {
    format .tl_set:N = \l__postnotes_print_format_tl ,
    format .initial:n = { \small } ,
    format .value_required:n = true ,
  }
\tl_new:N \l__postnotes_print_env_tl
\bool_new:N \l__postnotes_print_as_list_bool
\keys_define:nn { postnotes/setup }
  {
    listenv .code:n =
      {
        \tl_if_eq:nnTF {#1} { none }
          {
            \bool_set_false:N \l__postnotes_print_as_list_bool
            \tl_set:Nn \l__postnotes_post_printnote_tl { \par }
            \tl_set:Nn \l__postnotes_print_env_tl { itemize }
          }
          {
            \bool_set_true:N \l__postnotes_print_as_list_bool
            \tl_set:Nn \l__postnotes_print_env_tl {#1}
          }
      } ,
    listenv .initial:n = { postnoteslist } ,
    listenv .value_required:n = true ,
  }
\NewDocumentEnvironment { postnoteslist } { }
  {
    \list { }
      {
        \setlength { \leftmargin }    { 0pt }
        \setlength { \labelwidth }    { 0pt }
        \setlength { \itemindent }    { .5\parindent }
        \cs_set_eq:NN \makelabel \__postnotes_list_makelabel:n
        \setlength { \rightmargin }   { 0pt }
        \setlength { \listparindent } { \parindent }
        \setlength { \parsep }    { \parskip }
        \setlength { \itemsep }   { 0pt }
        \setlength { \topsep }    { .5\topsep }
        \setlength { \partopsep } { .5\partopsep }
      }
  }
  { \endlist }
\NewDocumentEnvironment { postnoteslisthang } { }
  {
    \list { }
      {
        \setlength { \leftmargin }    { 1em }
        \setlength { \labelwidth }    { -\leftmargin }
        \setlength { \itemindent }    { -2\leftmargin }
        \cs_set_eq:NN \makelabel \__postnotes_list_makelabel:n
        \setlength { \rightmargin }   { 0pt }
        \setlength { \listparindent } { \parindent }
        \setlength { \parsep }    { \parskip }
        \setlength { \itemsep }   { 0pt }
        \setlength { \topsep }    { .5\topsep }
        \setlength { \partopsep } { .5\partopsep }
      }
  }
  { \endlist }
\cs_new:Npn \__postnotes_list_makelabel:n #1
  { \hspace { \labelsep } \normalfont ~ #1 }
\keys_define:nn { postnotes/setup }
  {
    makemark .cs_set:Np = \__postnotes_make_mark:nnn #1#2#3 ,
    makemark .value_required:n = true ,
    makemark .initial:n =
      { #2 \hbox { \@textsuperscript { \normalfont #1 } } #3 } ,
    maketextmark .cs_set:Np = \__postnotes_make_text_mark:nnn #1#2#3  ,
    maketextmark .value_required:n = true ,
    maketextmark .initial:n = { #2 #1 . #3 } ,
  }
\cs_generate_variant:Nn \__postnotes_make_mark:nnn { Vnn }
\tl_new:N \l__postnotes_pre_textmark_tl
\tl_new:N \l__postnotes_post_textmark_tl
\tl_new:N \l__postnotes_post_printnote_tl
\keys_define:nn { postnotes/setup }
  {
    pretextmark .tl_set:N = \l__postnotes_pre_textmark_tl ,
    pretextmark .value_required:n = true ,
    posttextmark .tl_set:N = \l__postnotes_post_textmark_tl ,
    posttextmark .value_required:n = true ,
    postprintnote .tl_set:N = \l__postnotes_post_printnote_tl ,
    postprintnote .value_required:n = true ,
  }
\keys_define:nn { postnotes/setup }
  {
    style .choice: ,
    style / endnotes .meta:n =
      {
        listenv = none ,
        format =
          {
            \footnotesize
            \setlength { \rightskip } { 0pt   }
            \setlength { \leftskip  } { 0pt   }
            \setlength { \parindent } { 1.8em }
          } ,
        maketextmark =
          {
            \hbox_set:Nn \l__postnotes_tmpa_box
              { \@textsuperscript { \normalfont ##1 } }
            \skip_horizontal:n { - \box_wd:N \l__postnotes_tmpa_box }
            ##2 \box_use:N \l__postnotes_tmpa_box ##3
          } ,
      } ,
    style / pagenote .meta:n =
      {
        listenv = none ,
        format = { } ,
        pretextmark = { \noindent } ,
        maketextmark = { { \normalfont ##2 ##1 . ##3 } } ,
        posttextmark = { ~ } ,
      } ,
  }
\bool_new:N \l__postnotes_hyperlink_bool
\bool_new:N \l__postnotes_hyperref_warn_bool
\bool_new:N \l__postnotes_backlink_bool
\keys_define:nn { postnotes/setup }
  {
    hyperref .choice: ,
    hyperref / auto .code:n =
      {
        \bool_set_true:N \l__postnotes_hyperlink_bool
        \bool_set_false:N \l__postnotes_hyperref_warn_bool
      } ,
    hyperref / true .code:n =
      {
        \bool_set_true:N \l__postnotes_hyperlink_bool
        \bool_set_true:N \l__postnotes_hyperref_warn_bool
      } ,
    hyperref / false .code:n =
      {
        \bool_set_false:N \l__postnotes_hyperlink_bool
        \bool_set_false:N \l__postnotes_hyperref_warn_bool
      } ,
    hyperref .initial:n = auto ,
    hyperref .default:n = true ,
    backlink .bool_set:N = \l__postnotes_backlink_bool ,
    backlink .initial:n = true ,
    backlink .default:n = true ,
  }
\AddToHook { begindocument }
  {
    \IfPackageLoadedTF { hyperref }
      { }
      {
        \bool_if:NT \l__postnotes_hyperref_warn_bool
          { \msg_warning:nn { postnotes } { missing-hyperref } }
        \bool_set_false:N \l__postnotes_hyperlink_bool
      }
    \keys_define:nn { postnotes/setup }
      {
        hyperref .code:n =
          {
            \msg_warning:nnn { postnotes }
              { option-preamble-only } { hyperref }
          } ,
        backlink .code:n =
          {
            \msg_warning:nnn { postnotes }
              { option-preamble-only } { backlink }
          } ,
      }
  }
\msg_new:nnn { postnotes } { option-preamble-only }
  { Option~'#1'~only~available~in~the~preamble~\msg_line_context:. }
\msg_new:nnn { postnotes } { missing-hyperref }
  { Missing~'hyperref'~package.~Setting~'hyperref=false'. }
\tl_new:N \l__postnotes_multisep_tl
\tl_const:Nn \c_postnotes_multi_notemarker_tl { 3sp }
\bool_new:N \l__postnotes_multiple_bool
\tl_new:N \l__postnotes_saved_spacefactor_multi_tl
\keys_define:nn { postnotes/setup }
  {
    multiple .bool_set:N = \l__postnotes_multiple_bool ,
    multiple .default:n = true ,
    multiple .initial:n = false ,
    multisep .tl_set:N = \l__postnotes_multisep_tl ,
    multisep .value_required:n = true ,
    multisep .initial:n = {,} ,
  }
\cs_new_protected:Npn \__postnotes_multiple_prepare:
  {
    \bool_if:NT \l__postnotes_multiple_bool
      {
        \kern -\c_postnotes_multi_notemarker_tl
        \kern  \c_postnotes_multi_notemarker_tl
        \scan_stop:
      }
  }
\cs_new_protected:Npn \__postnotes_multiple_check:
  {
    \bool_if:NT \l__postnotes_multiple_bool
      {
        \dim_compare:nNnT
          { \c_postnotes_multi_notemarker_tl } = { \lastkern }
          {
            \tl_set:Ne \l__postnotes_saved_spacefactor_multi_tl
              { \int_use:N \spacefactor }
            \unkern
            \unkern
            \tag_socket_use:n { postnotes/multisep/begin }
            \__postnotes_make_mark:Vnn \l__postnotes_multisep_tl { } { }
            \tag_socket_use:n { postnotes/multisep/end }
            \spacefactor \l__postnotes_saved_spacefactor_multi_tl
            \scan_stop:
          }
      }
  }
\bool_new:N \l__postnotes_sort_bool
\keys_define:nn { postnotes/setup }
  {
    sort .bool_set:N = \l__postnotes_sort_bool ,
    sort .initial:n = true ,
    sort .default:n = true ,
  }
\bool_new:N \l__postnotes_check_dupli_bool
\bool_new:N \l__postnotes_check_floats_bool
\keys_define:nn { postnotes/setup }
  {
    checkduplicates .bool_set:N = \l__postnotes_check_dupli_bool ,
    checkduplicates .default:n = true ,
    checkduplicates .initial:n = true ,
    checkfloats .bool_set:N = \l__postnotes_check_floats_bool ,
    checkfloats .default:n = true ,
    checkfloats .initial:n = false ,
  }
\bool_new:N \l__postnotes_maybe_multi_bool
\keys_define:nn { postnotes/setup }
  {
    maybemulti .bool_set:N = \l__postnotes_maybe_multi_bool ,
    maybemulti .default:n = true ,
    maybemulti .initial:n = false ,
  }
\bool_new:N \g__postnotes_counteraux_bool
\keys_define:nn { postnotes/setup }
  {
    counteraux .bool_gset:N = \g__postnotes_counteraux_bool ,
    counteraux .default:n = true ,
    counteraux .initial:n = false ,
  }
\AddToHook { begindocument/before }
  {
    \bool_if:NT \g__postnotes_counteraux_bool
      { \postnotesetup { sort=false } }
    \keys_define:nn { postnotes/setup }
      {
        counteraux .code:n =
          {
            \msg_warning:nnn { postnotes }
              { option-preamble-only } { counteraux }
          } ,
      }
  }
\cs_new_protected:Npn \postnote@setcounteraux #1
  { \int_gset:Nn \g__postnotes_postnote_counteraux_int { #1 } }
\cs_new_protected:Npn \postnote@addtocounteraux #1
  { \int_gadd:Nn \g__postnotes_postnote_counteraux_int { #1 } }
\NewDocumentCommand \pnsetcounteraux { m }
  {
    \@bsphack
    \legacy_if:nT { @filesw }
      {
        \protected@write \@auxout { }
          { \token_to_str:N \postnote@setcounteraux { #1 } }
      }
    \@esphack
  }
\NewDocumentCommand \pnaddtocounteraux { m }
  {
    \@bsphack
    \legacy_if:nT { @filesw }
      {
        \protected@write \@auxout { }
          { \token_to_str:N \postnote@addtocounteraux { #1 } }
      }
    \@esphack
  }
\NewDocumentCommand \postnotesetup { m }
  { \keys_set:nn { postnotes/setup } {#1} }
\newcounter { postnote }
\int_new:N \g__postnotes_note_id_int
\tl_new:N \l_postnotes_note_id_tl
\tl_set:Nn \l_postnotes_note_id_tl { \int_use:N \g__postnotes_note_id_int }
\seq_new:N \g__postnotes_queue_seq
\int_new:N \l__postnotes_counteraux_step_int
\tl_new:N \l__postnotes_mark_typeset_tl
\tl_new:N \l__postnotes_note_set_labels_tl
\NewDocumentCommand \postnote { O { } +m }
  { \__postnotes_note:nn {#1} {#2} }
\NewHook { postnotes/note/begin }
\NewHook { postnotes/note/setlabels }
\cs_new_protected:Npn \__postnotes_note:nn #1#2
  {
    \group_begin:
      \keys_set:nn { postnotes/note } {#1}
      \bool_if:NT \l__postnotes_nomark_bool { \@bsphack }
      \__postnotes_inhibit_note:F
        {
          \int_gincr:N \g__postnotes_note_id_int
          \tl_if_empty:NTF \l__postnotes_mark_tl
            {
              \stepcounter { postnote }
              \int_set:Nn \l__postnotes_counteraux_step_int { 1 }
              \bool_if:NT \g__postnotes_counteraux_bool
                {
                  \exp_args:NNe \prop_gpop:NnNT \g__postnotes_counteraux_prop
                    { \l_postnotes_note_id_tl } \l__postnotes_tmpa_tl
                    { \int_set:Nn \c@postnote { \l__postnotes_tmpa_tl } }
                  \tl_clear:N \l__postnotes_tmpa_tl
                }
              \protected@edef \l__postnotes_mark_tl { \thepostnote }
            }
            { \int_set:Nn \l__postnotes_counteraux_step_int { 0 } }
          \UseHook { postnotes/note/begin }
          \seq_gput_right:Ne \g__postnotes_queue_seq
            { \l_postnotes_note_id_tl }
          \tl_set:Nn \@currentcounter { postnote }
          \protected@edef \@currentlabel { \p@postnote \l__postnotes_mark_tl }
          \tl_gset:Ne \@currentHref
            { postnote. \l_postnotes_note_id_tl .mark }
          \__postnotes_store:nn { \l_postnotes_note_id_tl } {#2}
          \tl_set_eq:NN \l__postnotes_mark_typeset_tl \l__postnotes_mark_tl
          \bool_lazy_or:nnT
            { \g__postnotes_counteraux_bool }
            { \l__postnotes_maybe_multi_bool }
            {
              \bool_lazy_and:nnT
                { ! \g__postnotes_firstrun_bool }
                {
                  ! \cs_if_exist_p:c
                    { \c__postnotes_ref_prefix_tl @ mark @ \l_postnotes_note_id_tl }
                }
                { \__postnotes_get_label_if_exist:N \l__postnotes_mark_typeset_tl }
            }
          \tl_set:Nn \l__postnotes_note_set_labels_tl
            {
              \UseHook { postnotes/note/setlabels }
              \MakeLinkTarget* { postnote. \l_postnotes_note_id_tl .mark }
              \__postnotes_set_mark_page_label:ee { \l_postnotes_note_id_tl }
                { \int_use:N \l__postnotes_counteraux_step_int }
              \__postnotes_set_user_labels:
            }
          \bool_if:NTF \l__postnotes_nomark_bool
            {
              \tag_socket_use:n { postnotes/nomark/begin }
              \l__postnotes_note_set_labels_tl
              \tag_socket_use:n { postnotes/nomark/end }
            }
            {
              \__postnotes_typeset_mark:eVN
                { \l_postnotes_note_id_tl } \l__postnotes_mark_typeset_tl
                \l__postnotes_note_set_labels_tl
            }
        }
      \bool_if:NT \l__postnotes_nomark_bool { \@esphack }
    \group_end:
  }
\tl_new:N \l__postnotes_mark_tl
\bool_new:N \l__postnotes_nomark_bool
\fp_new:N \l__postnotes_sort_num_fp
\str_new:N \l__postnotes_note_label_str
\bool_new:N \l__postnotes_manual_sortnum_bool
\keys_define:nn { postnotes/note }
  {
    markstr .tl_set:N = \l__postnotes_mark_tl ,
    markstr .value_required:n = true ,
    sortnum .code:n =
      {
        \fp_set:Nn \l__postnotes_sort_num_fp {#1}
        \bool_set_true:N \l__postnotes_manual_sortnum_bool
      } ,
    sortnum .value_required:n = true ,
    mark .meta:n =
      {
        markstr = {#1} ,
        sortnum = {#1} ,
      } ,
    mark .value_required:n = true ,
    nomark .bool_set:N = \l__postnotes_nomark_bool ,
    nomark .default:n = true ,
    label .str_set:N = \l__postnotes_note_label_str ,
    label .value_required:n = true ,
    maybemulti .bool_set:N = \l__postnotes_maybe_multi_bool ,
    maybemulti .default:n = true ,
  }
\bool_new:N \l__postnotes_inhibit_note_bool
\bool_new:N \l__postnotes_print_plain_mark_bool
\bool_new:N \l__postnotes_print_plain_mark_stepcounter_bool
\NewHook { postnotes/note/inhibit }
\prg_new_protected_conditional:Npnn \__postnotes_inhibit_note: { F }
  {
    \bool_set_false:N \l__postnotes_inhibit_note_bool
    \bool_set_false:N \l__postnotes_print_plain_mark_bool
    \bool_set_false:N \l__postnotes_print_plain_mark_stepcounter_bool
    \UseHook { postnotes/note/inhibit }
    \bool_lazy_all:nT
      {
        { \l__postnotes_inhibit_note_bool }
        { \l__postnotes_print_plain_mark_bool }
        { ! \l__postnotes_nomark_bool }
      }
      {
        \tl_if_empty:NTF \l__postnotes_mark_tl
          {
            \bool_if:NTF \l__postnotes_print_plain_mark_stepcounter_bool
              {
                \stepcounter { postnote }
                \protected@edef \l__postnotes_mark_typeset_tl { \thepostnote }
              }
              {
                \group_begin:
                  \int_incr:N \c@postnote
                  \protected@edef \l__postnotes_tmpa_tl { \thepostnote }
                  \exp_args:NNNV
                    \group_end:
                    \tl_set:Nn \l__postnotes_mark_typeset_tl \l__postnotes_tmpa_tl
              }
            \__postnotes_get_label_if_exist:N \l__postnotes_mark_typeset_tl
          }
          { \tl_set_eq:NN \l__postnotes_mark_typeset_tl \l__postnotes_mark_tl }
        \group_begin:
          \socket_assign_plug:nn { tagsupport/postnotes/multisep/begin } { noop }
          \socket_assign_plug:nn { tagsupport/postnotes/multisep/end } { noop }
          \__postnotes_typeset_mark_wrapper:nnn
            { \__postnotes_make_mark:Vnn \l__postnotes_mark_typeset_tl { } { } }
            { } { }
        \group_end:
      }
    \bool_if:NTF \l__postnotes_inhibit_note_bool
      { \prg_return_true:  }
      { \prg_return_false: }
  }
\cs_new_protected:Npn \__postnotes_get_label_if_exist:N #1
  {
    \str_if_empty:NTF \l__postnotes_note_label_str
      {
        \str_if_empty:NF \l__postnotes_note_zlabel_str
          {
            \exp_args:NV \zref@ifrefundefined \l__postnotes_note_zlabel_str
              { }
              {
                \exp_args:NV \zref@ifrefcontainsprop
                  \l__postnotes_note_zlabel_str
                  { postnote@mark }
                  {
                    \exp_args:NNNo \exp_args:NNo \tl_set:Nn #1
                      {
                        \zref@extract
                          { \l__postnotes_note_zlabel_str } { postnote@mark }
                      }
                  }
                  { }
              }
          }
      }
      {
        \exp_args:Ne \property_if_recorded:nnT
          { postnotes@ \l__postnotes_note_label_str }
          { postnotes/mark }
          {
            \protected@edef #1
              {
                \property_ref:ee
                  { __postnotes_ \l__postnotes_note_label_str } { postnotes/mark }
              }
          }
      }
  }
\cs_new_protected:Npn \__postnotes_typeset_mark:nnN #1#2#3
  {
    \__postnotes_typeset_mark_wrapper:nnn
      {
        #3
        \bool_if:NTF \l__postnotes_hyperlink_bool
          {
            \__postnotes_make_mark:nnn {#2}
              { \hyper@linkstart { link } { postnote. #1 .text } }
              { \hyper@linkend }
          }
          { \__postnotes_make_mark:nnn {#2} { } { } }
      }
      { \tag_socket_use:n { postnotes/mark/begin } }
      { \tag_socket_use:n { postnotes/mark/end }   }
  }
\cs_generate_variant:Nn \__postnotes_typeset_mark:nnN { eVN }
\tl_new:N \l__postnotes_saved_spacefactor_tl
\cs_new_protected:Npn \__postnotes_typeset_mark_wrapper:nnn #1#2#3
  {
    \mode_leave_vertical:
    \mode_if_horizontal:T
      {
        \tl_set:Ne \l__postnotes_saved_spacefactor_tl
          { \int_use:N \spacefactor }
        \__postnotes_multiple_check:
        \nobreak
      }
    #2 % begin tagging socket
    #1 % mark
    #3 % end tagging socket
    \__postnotes_multiple_prepare:
    \mode_if_horizontal:T
      { \spacefactor \l__postnotes_saved_spacefactor_tl }
    \scan_stop:
  }
\cs_new_protected:Npn \__postnotes_set_user_labels:
  {
    \str_if_empty:NF \l__postnotes_note_label_str
      {
        \exp_args:NV \label \l__postnotes_note_label_str
        \property_record:ee { __postnotes_ \l__postnotes_note_label_str }
          { postnotes/mark }
      }
    \str_if_empty:NF \l__postnotes_note_zlabel_str
      { \exp_args:NV \zlabel \l__postnotes_note_zlabel_str }
  }
\property_new:nnnn { postnotes/mark } { now } { } { \l__postnotes_mark_tl }
\NewDocumentCommand \postnoteref { s m }
  { \__postnotes_note_ref:nn {#1} {#2} }
\str_new:N \l__postnotes_note_ref_label_str
\cs_new_protected:Npn \__postnotes_note_ref:nn #1#2
  {
    \group_begin:
      \str_set:Nn \l__postnotes_note_ref_label_str {#2}
      \__postnotes_typeset_mark_wrapper:nnn
        {
          \bool_lazy_and:nnTF
            { ! #1 }
            { \l__postnotes_hyperlink_bool }
            {
              \hyperref [#2]
                { \__postnotes_make_mark:nnn { \ref*{#2} } { } { } }
            }
            { \__postnotes_make_mark:nnn { \ref*{#2} } { } { } }
        }
        { \tag_socket_use:n { postnotes/postnoteref/begin } }
        { \tag_socket_use:n { postnotes/postnoteref/end }   }
    \group_end:
  }
\NewDocumentCommand \postnotesection { O { } +m }
  {
    \@bsphack
    \__postnotes_section:nn {#1} {#2}
    \@esphack
  }
\int_new:N \g__postnotes_sectid_int
\cs_new_protected:Npn \__postnotes_section:nn #1#2
  {
    \group_begin:
      \int_gincr:N \g__postnotes_sectid_int
      \int_gincr:N \g__postnotes_note_id_int
      \seq_gput_right:Ne \g__postnotes_queue_seq { \l_postnotes_note_id_tl }
      \tl_gclear:N \g__postnotes_section_name_tl
      \keys_set:nn { postnotes/section } {#1}
      \__postnotes_set_section_page_label:e { \l_postnotes_note_id_tl }
      \bool_if:NTF \l__postnotes_section_exp_bool
        {
          \protected@edef \l__postnotes_tmpa_tl {#2}
          \__postnotes_store_section:nV { \l_postnotes_note_id_tl }
            \l__postnotes_tmpa_tl
        }
        { \__postnotes_store_section:nn { \l_postnotes_note_id_tl } {#2} }
    \group_end:
  }
\tl_new:N \g__postnotes_section_name_tl
\bool_new:N \l__postnotes_section_exp_bool
\keys_define:nn { postnotes/section }
  {
    name .tl_gset:N = \g__postnotes_section_name_tl ,
    name .value_required:n = true ,
    exp .bool_set:N = \l__postnotes_section_exp_bool ,
    exp .initial:n = false ,
    exp .default:n = true ,
  }
\NewDocumentCommand \printpostnotes { }
  { \__postnotes_print_notes: }
\tl_new:N \pnthechapter
\tl_new:N \pnthesection
\tl_new:N \pnidnextnote
\tl_new:N \pnthechapternextnote
\tl_new:N \pnthesectionnextnote
\tl_new:N \pnthepage
\int_new:N \g__postnotes_print_postnotes_int
\seq_new:N \g__postnotes_print_queue_seq
\tl_new:N \l_postnotes_print_note_id_tl
\tl_new:N \l__postnotes_print_note_id_next_tl
\tl_new:N \l__postnotes_print_counter_tl
\tl_new:N \l__postnotes_print_mark_tl
\tl_new:N \l__postnotes_print_typeset_mark_tl
\tl_new:N \l__postnotes_print_type_curr_tl
\tl_new:N \l__postnotes_print_type_next_tl
\tl_new:N \l__postnotes_print_type_prev_tl
\tl_new:N \l__postnotes_print_content_tl
\tl_new:N \l__postnotes_print_page_tl
\tl_new:N \l__postnotes_print_chapter_tl
\tl_new:N \l__postnotes_print_section_tl
\tl_new:N \l__postnotes_print_sectname_tl
\seq_new:N \l__postnotes_clear_queue_seq
\mark_new_class:n { postnotes/page }
\mark_new_class:n { postnotes/chapter }
\mark_new_class:n { postnotes/section }
\mark_new_class:n { postnotes/sectname }
\NewHook { postnotes/print/begin }
\NewHook { postnotes/print/note/begin }
\NewHook { postnotes/print/note/typesetmark }
\NewHook { postnotes/print/note/ltmarks }
\newcounter { postnotetext }
\newcounter { postnotesection }
\setcounter { postnotesection } { 10000 }
\cs_new_protected:Npn \__postnotes_print_notes:
  {
    \group_begin:
      \int_gincr:N \g__postnotes_print_postnotes_int
      \__postnotes_split_labelseq:
      \bool_lazy_and:nnTF
        { \g__postnotes_counteraux_bool }
        { ! \g__postnotes_firstrun_bool }
        {
          \seq_gset_eq:NN \g__postnotes_print_queue_seq
            \g__postnotes_print_labelseq_queue_seq
        }
        {
          \seq_gset_eq:NN \g__postnotes_print_queue_seq
            \g__postnotes_queue_seq
        }
      \seq_set_eq:NN \l__postnotes_clear_queue_seq \g__postnotes_print_queue_seq
      \seq_gclear:N \g__postnotes_queue_seq
      \__postnotes_set_print_label:e
        { \int_use:N \g__postnotes_print_postnotes_int }
      \seq_if_empty:NTF \g__postnotes_print_queue_seq
        { \msg_warning:nn { postnotes } { empty-printpostnotes } }
        {
          \pnheading
          \UseHook { postnotes/print/begin }
          \tl_set:Nn \l__postnotes_print_type_prev_tl { open }
          \__postnotes_check_duplicates:N \g__postnotes_print_queue_seq
          \__postnotes_sort_queue:N \g__postnotes_print_queue_seq
          \__postnotes_check_floats:N \g__postnotes_print_queue_seq
          \__postnotes_set_header_vars_first:
          \bool_if:NF \l__postnotes_print_as_list_bool
            {
              \cs_set_eq:NN \@afterindentfalse \@afterindenttrue
              \@afterindenttrue
            }
          \bool_until_do:nn { \seq_if_empty_p:N \g__postnotes_print_queue_seq }
            {
              \seq_gpop_left:NN \g__postnotes_print_queue_seq
                \l_postnotes_print_note_id_tl
              \__postnotes_prop_get:nnN { \l_postnotes_print_note_id_tl }
                { type } \l__postnotes_print_type_curr_tl
              \tl_if_eq:NnTF \l__postnotes_print_type_curr_tl { section }
                { % type_curr = `section'
                  \seq_if_empty:NTF \g__postnotes_print_queue_seq
                    {
                      \tl_set:Nn \l__postnotes_print_note_id_next_tl { noid }
                      \tl_set:Nn \l__postnotes_print_type_next_tl { close }
                    }
                    {
                      \seq_get_left:NN \g__postnotes_print_queue_seq
                        \l__postnotes_print_note_id_next_tl
                      \__postnotes_prop_get:nnN
                        { \l__postnotes_print_note_id_next_tl }
                        { type } \l__postnotes_print_type_next_tl
                    }
                  \tl_if_eq:NnT \l__postnotes_print_type_next_tl { note }
                    {
                      \stepcounter { postnotesection }
                      \group_begin:
                        \__postnotes_prop_get:nnN
                          { \l_postnotes_print_note_id_tl }
                          { thechapter } \pnthechapter
                        \__postnotes_prop_get:nnN
                          { \l_postnotes_print_note_id_tl }
                          { thesection } \pnthesection
                        \tl_set:NV \pnidnextnote
                          \l__postnotes_print_note_id_next_tl
                        \__postnotes_prop_get:nnN
                          { \l__postnotes_print_note_id_next_tl }
                          { thechapter } \pnthechapternextnote
                        \__postnotes_prop_get:nnN
                          { \l__postnotes_print_note_id_next_tl }
                          { thesection } \pnthesectionnextnote
                        \__postnotes_prop_get:nnN
                          { \l_postnotes_print_note_id_tl }
                          { content } \l__postnotes_print_content_tl
                        \l__postnotes_print_content_tl
                      \group_end:
                      \tl_set:NV \l__postnotes_print_type_prev_tl
                        \l__postnotes_print_type_curr_tl
                    }
                }
                { % type_curr = `note'
                  \seq_if_empty:NTF \g__postnotes_print_queue_seq
                    {
                      \tl_set:Nn \l__postnotes_print_note_id_next_tl { noid }
                      \tl_set:Nn \l__postnotes_print_type_next_tl { close }
                    }
                    {
                      \seq_get_left:NN \g__postnotes_print_queue_seq
                        \l__postnotes_print_note_id_next_tl
                      \__postnotes_prop_get:nnN
                        { \l__postnotes_print_note_id_next_tl }
                        { type } \l__postnotes_print_type_next_tl
                    }
                  \tl_if_eq:NnF \l__postnotes_print_type_prev_tl { note }
                    {
                      \bool_if:NTF \l__postnotes_print_as_list_bool
                        { \exp_args:NV \begin \l__postnotes_print_env_tl }
                        { \group_begin: }
                      \tag_socket_use:n { postnotes/printlist/begin }
                      \l__postnotes_print_format_tl
                    }
                  \group_begin:
                    \UseHook { postnotes/print/note/begin }
                    \__postnotes_get_pageref:Ne \l__postnotes_print_page_tl
                      { mark@ \l_postnotes_print_note_id_tl }
                    \__postnotes_prop_get:nnN { \l_postnotes_print_note_id_tl }
                      { thechapter } \l__postnotes_print_chapter_tl
                    \__postnotes_prop_get:nnN { \l_postnotes_print_note_id_tl }
                      { thesection } \l__postnotes_print_section_tl
                    \__postnotes_prop_get:nnN { \l_postnotes_print_note_id_tl }
                      { pnsectname } \l__postnotes_print_sectname_tl
                    \tl_set_eq:NN \pnthepage \l__postnotes_print_page_tl
                    \__postnotes_prop_get:nnN
                      { \l_postnotes_print_note_id_tl }
                      { mark } \l__postnotes_print_mark_tl
                    \__postnotes_prop_get:nnN
                      { \l_postnotes_print_note_id_tl }
                      { counter } \l__postnotes_print_counter_tl
                    \__postnotes_prop_get:nnN
                      { \l_postnotes_print_note_id_tl }
                      { content } \l__postnotes_print_content_tl
                    \tl_set:Nn \@currentcounter { postnotetext }
                    \int_set:Nn \c@postnotetext
                      { \l__postnotes_print_counter_tl }
                    \protected@edef \@currentlabel
                      { \p@postnote \l__postnotes_print_mark_tl }
                    \tl_set:Nn \l__postnotes_print_typeset_mark_tl
                      {
                        \tag_socket_use:n { postnotes/printmark/begin }
                        \UseHook { postnotes/print/note/typesetmark }
                        \MakeLinkTarget*
                          { postnote. \l_postnotes_print_note_id_tl .text }
                        \l__postnotes_pre_textmark_tl
                        \__postnotes_typeset_text_mark:eV
                          { \l_postnotes_print_note_id_tl }
                          \l__postnotes_print_mark_tl
                        \l__postnotes_post_textmark_tl
                        \tag_socket_use:n { postnotes/printmark/end }
                      }
                    \bool_if:NTF \l__postnotes_print_as_list_bool
                      {
                        \item
                          [
                            \tag_socket_use:n { postnotes/printnote/begin }
                            \l__postnotes_print_typeset_mark_tl
                          ]
                        \mode_leave_vertical:
                      }
                      {
                        \mode_leave_vertical:
                        \tag_socket_use:n { postnotes/printnote/begin }
                        \l__postnotes_print_typeset_mark_tl
                      }
                    \UseHook { postnotes/print/note/ltmarks }
                    \mark_insert:nn { postnotes/page }
                      { \l__postnotes_print_page_tl }
                    \mark_insert:nn { postnotes/chapter }
                      { \l__postnotes_print_chapter_tl }
                    \mark_insert:nn { postnotes/section }
                      { \l__postnotes_print_section_tl }
                    \mark_insert:nn { postnotes/sectname }
                      { \l__postnotes_print_sectname_tl }
                    \tag_socket_use:n { postnotes/printtext/begin }
                    \l__postnotes_print_content_tl
                    \tag_socket_use:n { postnotes/printtext/end }
                    \tag_socket_use:n { postnotes/printnote/end }
                    \l__postnotes_post_printnote_tl
                  \group_end:
                  \tl_if_eq:NnF \l__postnotes_print_type_next_tl { note }
                    {
                      \tag_socket_use:n { postnotes/printlist/end }
                      \bool_if:NTF \l__postnotes_print_as_list_bool
                        {
                          \exp_args:NV \end \l__postnotes_print_env_tl
                          \par
                        }
                        {
                          \par
                          \group_end:
                        }
                    }
                  \tl_set:NV \l__postnotes_print_type_prev_tl
                    \l__postnotes_print_type_curr_tl
                }
            }
          \__postnotes_set_header_vars_bool:
          \seq_map_inline:Nn \l__postnotes_clear_queue_seq
            { \__postnotes_prop_gclear:n { ##1 } }
        }
    \group_end:
  }
\msg_new:nnn { postnotes } { empty-printpostnotes }
  { Empty~'\iow_char:N\\printpostnotes'~\msg_line_context:. }
\cs_new_protected:Npn \__postnotes_typeset_text_mark:nn #1#2
  {
    \bool_lazy_and:nnTF
      { \l__postnotes_hyperlink_bool }
      { \l__postnotes_backlink_bool  }
      {
        \__postnotes_make_text_mark:nnn {#2}
          { \hyper@linkstart { link } { postnote. #1 .mark } }
          { \hyper@linkend }
      }
      { \__postnotes_make_text_mark:nnn {#2} { } { } }
  }
\cs_generate_variant:Nn \__postnotes_typeset_text_mark:nn { eV }
\seq_new:N \g__postnotes_print_labelseq_queue_seq
\cs_new_protected:Npn \__postnotes_split_labelseq:
  {
    \group_begin:
      \seq_clear:N \l__postnotes_tmpa_seq
      \seq_clear:N \l__postnotes_tmpb_seq
      \bool_if:NTF \g__postnotes_counteraux_bool
        {
          \tl_set:Ne \l__postnotes_tmpa_tl
            { { print } { \int_use:N \g__postnotes_print_postnotes_int } }
          \seq_if_in:NVF \g__postnotes_labelseq_seq \l__postnotes_tmpa_tl
            { \seq_gput_right:NV \g__postnotes_labelseq_seq \l__postnotes_tmpa_tl }
          \bool_do_until:nn
            { \tl_if_eq_p:NN \l__postnotes_tmpb_tl \l__postnotes_tmpa_tl }
            {
              \seq_gpop_left:NN \g__postnotes_labelseq_seq \l__postnotes_tmpb_tl
              \str_case:enT
                { \tl_item:Nn \l__postnotes_tmpb_tl { 1 } }
                {
                  { mark }    { }
                  { section } { }
                }
                {
                  \int_compare:nNnTF
                    { \tl_item:Nn \l__postnotes_tmpb_tl { 2 } }
                    >
                    { \g__postnotes_note_id_int }
                    {
                      \seq_put_right:Ne \l__postnotes_tmpb_seq
                        \l__postnotes_tmpb_tl
                    }
                    {
                      \seq_put_right:Ne \l__postnotes_tmpa_seq
                        { \tl_item:Nn \l__postnotes_tmpb_tl { 2 } }
                    }
                }
            }
          \seq_gset_eq:NN \g__postnotes_print_labelseq_queue_seq
            \l__postnotes_tmpa_seq
          \seq_concat:NNN \l__postnotes_tmpa_seq \l__postnotes_tmpb_seq
            \g__postnotes_labelseq_seq
          \seq_gset_eq:NN \g__postnotes_labelseq_seq \l__postnotes_tmpa_seq
        }
        {
          \seq_map_inline:Nn \g__postnotes_labelseq_seq
            {
              \str_case:enT
                { \tl_item:nn { ##1 } { 1 } }
                {
                  { mark }    { }
                  { section } { }
                }
                {
                  \int_compare:nNnTF
                    { \tl_item:nn { ##1 } { 2 } }
                    >
                    { \g__postnotes_note_id_int }
                    { \seq_put_right:Nn \l__postnotes_tmpb_seq { ##1 } }
                    {
                      \seq_put_right:Ne \l__postnotes_tmpa_seq
                        { \tl_item:nn { ##1 } { 2 } }
                    }
                }
            }
          \seq_gset_eq:NN \g__postnotes_print_labelseq_queue_seq
            \l__postnotes_tmpa_seq
          \seq_gset_eq:NN \g__postnotes_labelseq_seq \l__postnotes_tmpb_seq
        }
    \group_end:
  }
\cs_new_protected:Npn \__postnotes_check_duplicates:N #1
  {
    \bool_lazy_and:nnT
      { ! \g__postnotes_firstrun_bool }
      { ! \g__postnotes_counteraux_bool }
      {
        \group_begin:
          \seq_clear:N \l__postnotes_tmpa_seq
          \seq_map_inline:Nn #1
            {
              \bool_lazy_or:nnTF
                { \cs_if_exist_p:c { \c__postnotes_ref_prefix_tl @ mark @ ##1 } }
                {
                  \str_if_eq_p:ee
                    { \__postnotes_prop_item:nn {##1} { type } } { section }
                }
                { \seq_put_right:Nn \l__postnotes_tmpa_seq {##1} }
                {
                  \str_if_eq:eeF
                    { \__postnotes_prop_item:nn {##1} { multibool } }
                    { true }
                    {
                      \seq_put_right:Nn \l__postnotes_tmpa_seq {##1}
                      \bool_if:NT \l__postnotes_check_dupli_bool
                        {
                          \msg_warning:nne { postnotes } { possible-duplicate }
                            { \__postnotes_prop_item:nn {##1} { mark } }
                        }
                    }
                }
            }
          \seq_gset_eq:NN #1 \l__postnotes_tmpa_seq
        \group_end:
      }
  }
\msg_new:nnn { postnotes } { possible-duplicate }
  { Possible~duplicate~*around*~note~'#1'~\msg_line_context:. }
\cs_new_protected:Npn \__postnotes_check_floats:N #1
  {
    \bool_lazy_and:nnT
      { \l__postnotes_check_floats_bool }
      { ! \g__postnotes_firstrun_bool }
      {
        \group_begin:
          \seq_set_filter:NNn \l__postnotes_tmpa_seq #1
            {
              \bool_lazy_or_p:nn
                { \cs_if_exist_p:c { \c__postnotes_ref_prefix_tl @ mark @ ##1 } }
                { \cs_if_exist_p:c { \c__postnotes_ref_prefix_tl @ section @ ##1 } }
            }
          \tl_if_eq:NNF
            \g__postnotes_print_labelseq_queue_seq \l__postnotes_tmpa_seq
            { \msg_warning:nn { postnotes } { possible-shuffle } }
        \group_end:
      }
  }
\msg_new:nnn { postnotes } { possible-shuffle }
  { Possible~out~of~sequence~notes~due~to~floats~\msg_line_context:. }
\cs_new_protected:Npn \__postnotes_sort_queue:N #1
  {
    \bool_if:NT \l__postnotes_sort_bool
      {
        \group_begin:
          \seq_gsort:Nn #1
            {
              \__postnotes_prop_get:nnN {##1} { pnsectid } \l__postnotes_tmpa_tl
              \__postnotes_prop_get:nnN {##2} { pnsectid } \l__postnotes_tmpb_tl
              \tl_if_eq:NNTF \l__postnotes_tmpa_tl \l__postnotes_tmpb_tl
                {
                  \__postnotes_prop_get:nnN {##1} { type } \l__postnotes_tmpa_tl
                  \__postnotes_prop_get:nnN {##2} { type } \l__postnotes_tmpb_tl
                  \bool_lazy_and:nnTF
                    { \str_if_eq_p:Vn \l__postnotes_tmpa_tl { note } }
                    { \str_if_eq_p:Vn \l__postnotes_tmpb_tl { note } }
                    {
                      \__postnotes_prop_get:nnN {##1}
                        { sortnum } \l__postnotes_tmpa_tl
                      \__postnotes_prop_get:nnN {##2}
                        { sortnum } \l__postnotes_tmpb_tl
                      \fp_compare:nNnTF
                        { \l__postnotes_tmpa_tl } > { \l__postnotes_tmpb_tl }
                        { \sort_return_swapped: }
                        { \sort_return_same:    }
                    }
                    { \sort_return_same: }
                }
                { \sort_return_same: }
            }
        \group_end:
      }
  }
\AddToHook { enddocument/afterlastpage }
  {
    \group_begin:
      \bool_if:NTF \g__postnotes_counteraux_bool
        {
          \seq_set_filter:NNn \l__postnotes_tmpa_seq \g__postnotes_labelseq_seq
            { \str_if_eq_p:ee { \tl_item:nn {#1} { 1 } } { mark } }
        }
        {
          \seq_set_filter:NNn \l__postnotes_tmpa_seq \g__postnotes_queue_seq
            { \str_if_eq_p:ee { \__postnotes_prop_item:nn {#1} { type } } { note } }
        }
      \seq_if_empty:NF \l__postnotes_tmpa_seq
        {
          \msg_warning:nne { postnotes } { stray-notes }
            { \seq_count:N \l__postnotes_tmpa_seq }
        }
    \group_end:
  }
\msg_new:nnn { postnotes } { stray-notes }
  {
    There~are~'#1'~stray~notes~after~the~last~'\iow_char:N\\printpostnotes'~
    \msg_line_context:.~At~this~point,~they~are~lost.
  }
\bool_new:N \l__postnotes_deprecated_headervars_bool
\keys_define:nn { postnotes/setup }
  {
    deprecatedheadervars .bool_set:N = \l__postnotes_deprecated_headervars_bool ,
    deprecatedheadervars .default:n = true ,
    deprecatedheadervars .initial:n = false ,
  }
\AddToHook { begindocument }
  {
    \keys_define:nn { postnotes/setup }
      {
        deprecatedheadervars .code:n =
          {
            \msg_warning:nnn { postnotes }
              { option-preamble-only } { deprecatedheadervars }
          } ,
      }
  }
\tl_new:N \pnhdpagefirst
\tl_new:N \pnhdpagelast
\tl_new:N \pnhdchapfirst
\tl_new:N \pnhdchaplast
\tl_new:N \pnhdsectfirst
\tl_new:N \pnhdsectlast
\tl_new:N \pnhdnamefirst
\tl_new:N \pnhdnamelast
\tl_gset:Nn \pnhdpagefirst
  { \msg_error:nnn { postnotes } { deprecatedheadervars } { pnhdpagefirst } }
\tl_gset:Nn \pnhdpagelast
  { \msg_error:nnn { postnotes } { deprecatedheadervars } { pnhdpagelast } }
\tl_gset:Nn \pnhdchapfirst
  { \msg_error:nnn { postnotes } { deprecatedheadervars } { pnhdchapfirst } }
\tl_gset:Nn \pnhdchaplast
  { \msg_error:nnn { postnotes } { deprecatedheadervars } { pnhdchaplast } }
\tl_gset:Nn \pnhdsectfirst
  { \msg_error:nnn { postnotes } { deprecatedheadervars } { pnhdsectfirst } }
\tl_gset:Nn \pnhdsectlast
  { \msg_error:nnn { postnotes } { deprecatedheadervars } { pnhdsectlast } }
\tl_gset:Nn \pnhdnamefirst
  { \msg_error:nnn { postnotes } { deprecatedheadervars } { pnhdnamefirst } }
\tl_gset:Nn \pnhdnamelast
  { \msg_error:nnn { postnotes } { deprecatedheadervars } { pnhdnamelast } }
\msg_new:nnn { postnotes } { deprecatedheadervars }
  {
    '\iow_char:N\\ #1'~is~deprecated~\msg_line_context:.~
    You~should~migrate~to~the~new~'ltmarks'~(see~User~manual),~but~for~
    a~temporary~quick~fix~you~can~enable~the~'deprecatedheadervars'~option.
  }
\cs_set_eq:NN \__postnotes_set_header_vars_first: \prg_do_nothing:
\cs_set_eq:NN \__postnotes_set_header_vars_bool: \prg_do_nothing:
\AddToHook { begindocument }
  {
    \bool_if:NT \l__postnotes_deprecated_headervars_bool
      {
        \property_new:nnnn { postnotes/page/first } { shipout } { }
          { \FirstMark { postnotes/page } }
        \property_new:nnnn { postnotes/page/last } { shipout } { }
          { \LastMark { postnotes/page } }
        \property_new:nnnn { postnotes/chapter/first } { shipout } { }
          { \FirstMark { postnotes/chapter } }
        \property_new:nnnn { postnotes/chapter/last } { shipout } { }
          { \LastMark { postnotes/chapter } }
        \property_new:nnnn { postnotes/section/first } { shipout } { }
          { \FirstMark { postnotes/section } }
        \property_new:nnnn { postnotes/section/last } { shipout } { }
          { \LastMark { postnotes/section } }
        \property_new:nnnn { postnotes/sectname/first } { shipout } { }
          { \FirstMark { postnotes/sectname } }
        \property_new:nnnn { postnotes/sectname/last } { shipout } { }
          { \LastMark { postnotes/sectname } }
        \clist_const:Nn \c__postnotes_header_marks_clist
          {
            postnotes/page/first ,
            postnotes/page/last ,
            postnotes/chapter/first ,
            postnotes/chapter/last ,
            postnotes/section/first ,
            postnotes/section/last ,
            postnotes/sectname/first ,
            postnotes/sectname/last ,
          }
        \cs_new_protected:Npn \__postnotes_set_header_vars:n #1
          {
            \group_begin:
              \protected@xdef \pnhdpagefirst
                { \property_ref:nn { #1 } { postnotes/page/first } }
              \protected@xdef \pnhdpagelast
                { \property_ref:nn { #1 } { postnotes/page/last } }
              \protected@xdef \pnhdchapfirst
                { \property_ref:nn { #1 } { postnotes/chapter/first } }
              \protected@xdef \pnhdchaplast
                { \property_ref:nn { #1 } { postnotes/chapter/last } }
              \protected@xdef \pnhdsectfirst
                { \property_ref:nn { #1 } { postnotes/section/first } }
              \protected@xdef \pnhdsectlast
                { \property_ref:nn { #1 } { postnotes/section/last } }
              \protected@xdef \pnhdnamefirst
                { \property_ref:nn { #1 } { postnotes/sectname/first } }
              \protected@xdef \pnhdnamelast
                { \property_ref:nn { #1 } { postnotes/sectname/last } }
            \group_end:
          }
        \cs_generate_variant:Nn \__postnotes_set_header_vars:n { e }
        \bool_new:N \g__postnotes_header_vars_next_bool
        \int_new:N \g__postnotes_print_header_vars_int
        \cs_new_protected:Npn \__postnotes_set_headers_vars_next:
          {
            \bool_if:NT \g__postnotes_header_vars_next_bool
              {
                \int_gincr:N \g__postnotes_print_header_vars_int
                \exp_args:Ne \property_record:nN
                  {
                    __postnotes_header_
                    \int_use:N \g__postnotes_print_header_vars_int
                  }
                  \c__postnotes_header_marks_clist
                \__postnotes_set_header_vars:e
                  {
                    __postnotes_header_
                    \int_use:N \g__postnotes_print_header_vars_int
                  }
              }
          }
        \AddToHook { shipout/before } [ ./header ]
          { \__postnotes_set_headers_vars_next: }
        \cs_set_protected:Npn \__postnotes_set_header_vars_first:
          {
            \bool_gset_true:N \g__postnotes_header_vars_next_bool
            \tl_gset:Nn \pnhdpagefirst { \FirstMark{postnotes/page} }
            \tl_gset:Nn \pnhdpagelast  { \LastMark{postnotes/page}  }
            \tl_gset:Nn \pnhdchapfirst { \FirstMark{postnotes/chapter} }
            \tl_gset:Nn \pnhdchaplast  { \LastMark{postnotes/chapter}  }
            \tl_gset:Nn \pnhdsectfirst { \FirstMark{postnotes/section} }
            \tl_gset:Nn \pnhdsectlast  { \LastMark{postnotes/section}  }
            \tl_gset:Nn \pnhdnamefirst { \FirstMark{postnotes/sectname} }
            \tl_gset:Nn \pnhdnamelast  { \LastMark{postnotes/sectname}  }
            \int_gincr:N \g__postnotes_print_header_vars_int
            \exp_args:Ne \property_record:nN
              {
                __postnotes_header_
                \int_use:N \g__postnotes_print_header_vars_int
              }
              \c__postnotes_header_marks_clist
            \__postnotes_set_header_vars:e
              {
                __postnotes_header_
                \int_use:N \g__postnotes_print_header_vars_int
              }
          }
        \cs_set_protected:Npn \__postnotes_set_header_vars_bool:
          {
            \AddToHookNext { shipout/after }
              { \bool_gset_false:N \g__postnotes_header_vars_next_bool }
          }
      }
  }
\tl_new:N \l__postnotes_restore_tmp_tl
\AddToHook { postnotes/note/begin } [ ./compat/caption ]
  { \cs_if_exist:NT \@captype { \postnotesetup { maybemulti } } }
\AddToHook { package/biblatex/after } [ ./compat/biblatex ]
  {
    \AddToHook { postnotes/print/begin } [ postnotes/compat/biblatex ]
      { \toggletrue { blx@footnote } }
    \AddToHook { begindocument/before } [ postnotes/compat/biblatex ]
      {
        \cs_set:Npn \blx@theendnote { \postnote }
        \cs_set:Npn \blx@theendnotetext { \blx@err@endnote \footnotetext }
      }
  }
\str_new:N \l__postnotes_note_zlabel_str
\AddToHook { package/zref-user/after } [ ./compat/zref-user ]
  {
    \keys_define:nn { postnotes/note }
      {
        zlabel .str_set:N = \l__postnotes_note_zlabel_str ,
        zlabel .value_required:n = true ,
      }
    \zref@newprop { postnote@mark } [] { \l__postnotes_mark_tl }
    \AddToHook { postnotes/note/begin }  [ postnotes/compat/zref-user ]
      { \zref@localaddprop { main } { postnote@mark } }
    \NewDocumentCommand \postnotezref { s m }
      { \__postnotes_note_zref:nn {#1} {#2} }
    \str_new:N \l__postnotes_note_zref_zlabel_str
    \cs_new_protected:Npn \__postnotes_note_zref:nn #1#2
      {
        \group_begin:
          \str_set:Nn \l__postnotes_note_zref_zlabel_str {#2}
          \__postnotes_typeset_mark_wrapper:nnn
            {
              \bool_lazy_all:nTF
                {
                  { ! #1 }
                  { \l__postnotes_hyperlink_bool }
                  { \l__postnotes_zrefhyperref_bool }
                }
                {
                  \hyperlink
                    { \zref@extractdefault {#2} { anchor } { } }
                    { \__postnotes_make_mark:nnn { \zref{#2} } { } { } }
                }
                { \__postnotes_make_mark:nnn { \zref{#2} } { } { } }
            }
            { \tag_socket_use:n { postnotes/postnotezref/begin } }
            { \tag_socket_use:n { postnotes/postnotezref/end }   }
        \group_end:
      }
  }
\bool_new:N \l__postnotes_zrefhyperref_bool
\AddToHook { package/zref-hyperref/after } [ ./compat/zref-hyperref ]
  { \bool_set_true:N \l__postnotes_zrefhyperref_bool }
\AddToHook { package/zref-clever/after } [ ./compat/zref-clever ]
  {
    \zcsetup
      {
        countertype = { postnote = endnote } ,
        countertype = { postnotetext = endnote } ,
      }
    \AddToHook { postnotes/print/begin } [ postnotes/compat/zref-clever ]
      { \zcsetup { counterresetby = { postnotetext = postnotesection } } }
  }
\AddToHook { package/zref-check/after } [ ./compat/zref-check ]
  {
    \IfPackageAtLeastTF { zref-check } { 2022-07-05 }
      {
        \AddToHook { postnotes/note/store } [ postnotes/compat/zref-check ]
          {
            \prop_gput:cne { \__postnotes_data_name:e { \l_postnotes_note_id_tl } }
              { zref-check@abschap } { \int_use:N \c@zc@abschap }
            \prop_gput:cne { \__postnotes_data_name:e { \l_postnotes_note_id_tl } }
              { zref-check@abssec } { \int_use:N \c@zc@abssec }
          }
        \AddToHook { postnotes/print/note/begin } [ postnotes/compat/zref-check ]
          {
            \__postnotes_prop_get:nnN { \l_postnotes_print_note_id_tl }
              { zref-check@abschap } \l__postnotes_restore_tmp_tl
            \int_set:Nn \c@zc@abschap { \l__postnotes_restore_tmp_tl }
            \__postnotes_prop_get:nnN { \l_postnotes_print_note_id_tl }
              { zref-check@abssec } \l__postnotes_restore_tmp_tl
            \int_set:Nn \c@zc@abssec { \l__postnotes_restore_tmp_tl }
          }
      }
      { }
  }
\AddToHook { package/amsmath/after } [ ./compat/amsmath ]
  {
    \AddToHook { postnotes/note/inhibit } [ postnotes/compat/amsmath ]
      {
        \legacy_if:nT { measuring@ }
          {
            \bool_set_true:N \l__postnotes_inhibit_note_bool
            \bool_set_true:N \l__postnotes_print_plain_mark_bool
            \bool_set_true:N \l__postnotes_print_plain_mark_stepcounter_bool
          }
      }
    \AddToHook { postnotes/note/begin } [ postnotes/compat/amsmath ]
      { \legacy_if:nF { firstchoice@ } { \postnotesetup { maybemulti } } }
  }
\AddToHook { package/csquotes/after } [ ./compat/csquotes ]
  {
    \bool_new:N \l__postnotes_csquotes_measuring_bool
    \BlockquoteDisable
      { \bool_set_true:N \l__postnotes_csquotes_measuring_bool }
    \AddToHook { postnotes/note/inhibit } [ postnotes/compat/csquotes ]
      {
        \bool_if:NT \l__postnotes_csquotes_measuring_bool
          {
            \bool_set_true:N \l__postnotes_inhibit_note_bool
            \bool_set_true:N \l__postnotes_print_plain_mark_bool
            \bool_set_true:N \l__postnotes_print_plain_mark_stepcounter_bool
          }
      }
  }
\AddToHook { package/tabularx/after } [ ./compat/tabularx ]
  {
    \bool_new:N \l__postnotes_tabularx_inside_env_bool
    \AddToHook { env/tabularx/begin } [ postnotes/compat/tabularx ]
      {
        \bool_set_true:N \l__postnotes_tabularx_inside_env_bool
        \cs_set_eq:NN \__postnotes_tabularx_saved_write:Nn \write
      }
    \AddToHook { postnotes/note/inhibit } [ postnotes/compat/tabularx ]
      {
        \bool_lazy_and:nnT
          { \l__postnotes_tabularx_inside_env_bool }
          { ! \cs_if_eq_p:NN \write \__postnotes_tabularx_saved_write:Nn }
          {
            \bool_set_true:N \l__postnotes_inhibit_note_bool
            \bool_set_true:N \l__postnotes_print_plain_mark_bool
            \bool_set_true:N \l__postnotes_print_plain_mark_stepcounter_bool
          }
      }
    \AddToHook { package/xltabular/after } [ postnotes/compat/xltabular ]
      {
        \AddToHook { env/xltabular/begin } [ postnotes/compat/xltabular ]
          {
            \bool_set_true:N \l__postnotes_tabularx_inside_env_bool
            \cs_set_eq:NN \__postnotes_tabularx_saved_write:Nn \write
          }
      }
  }
\AddToHook { package/tabularray/after } [ ./compat/tabularray ]
  {
    \bool_if_exist:NT \lTblrMeasuringBool
      {
        \AddToHook { postnotes/note/inhibit } [ postnotes/compat/tabularray ]
          {
            \bool_if:NT \lTblrMeasuringBool
              {
                \bool_set_true:N \l__postnotes_inhibit_note_bool
                \bool_set_true:N \l__postnotes_print_plain_mark_bool
                \bool_set_true:N \l__postnotes_print_plain_mark_stepcounter_bool
              }
          }
      }
  }
\socket_new:nn { tagsupport/postnotes/mark/begin }{ 0 }
\socket_new:nn { tagsupport/postnotes/mark/end }{ 0 }
\socket_new:nn { tagsupport/postnotes/nomark/begin }{ 0 }
\socket_new:nn { tagsupport/postnotes/nomark/end }{ 0 }
\socket_new:nn { tagsupport/postnotes/multisep/begin }{ 0 }
\socket_new:nn { tagsupport/postnotes/multisep/end }{ 0 }
\socket_new:nn { tagsupport/postnotes/printlist/begin }{ 0 }
\socket_new:nn { tagsupport/postnotes/printlist/end }{ 0 }
\socket_new:nn { tagsupport/postnotes/printnote/begin }{ 0 }
\socket_new:nn { tagsupport/postnotes/printnote/end }{ 0 }
\socket_new:nn { tagsupport/postnotes/printmark/begin }{ 0 }
\socket_new:nn { tagsupport/postnotes/printmark/end }{ 0 }
\socket_new:nn { tagsupport/postnotes/printtext/begin }{ 0 }
\socket_new:nn { tagsupport/postnotes/printtext/end }{ 0 }
\socket_new:nn { tagsupport/postnotes/postnoteref/begin }{ 0 }
\socket_new:nn { tagsupport/postnotes/postnoteref/end }{ 0 }
\socket_new:nn { tagsupport/postnotes/postnotezref/begin }{ 0 }
\socket_new:nn { tagsupport/postnotes/postnotezref/end }{ 0 }
\bool_lazy_and:nnT
  { \cs_if_exist_p:N \tag_if_active_p: }
  { \tag_if_active_p: }
  {
    \tagpdfsetup
      {
        role/new-tag = { tag=endnote, role=FENote } ,
        role/new-tag = { tag=endnotemark, role=Lbl } ,
        role/new-tag = { tag=endnotelabel, role=Lbl } ,
        role/new-attribute =
          { EndnoteType } { /O /FENote /NoteType /Endnote } ,
        role/new-attribute =
          { EndnotesList } { /O /List /ListNumbering /Ordered } ,
      }
    \socket_new_plug:nnn { tagsupport/postnotes/mark/begin } { default }
      {
        \tag_mc_end_push:
        \tag_struct_begin:n
          {
            tag = endnotemark ,
            label = { postnotemark. \l_postnotes_note_id_tl } ,
            ref = { postnote. \l_postnotes_note_id_tl } ,
          }
        \__postnotes_tagsup_store_sctructnum:nN
          { postnotemark } \l_postnotes_note_id_tl
        \tag_mc_begin:n { }
      }
    \socket_new_plug:nnn { tagsupport/postnotes/mark/end } { default }
      {
        \tag_mc_end:
        \tag_struct_end: % endnotemark
        \tag_mc_begin_pop:n { }
      }
    \socket_new_plug:nnn { tagsupport/postnotes/nomark/begin } { default }
      {
        \tag_struct_begin:n
          {
            tag = NonStruct ,
            label = { postnotemark. \l_postnotes_note_id_tl } ,
            ref = { postnote. \l_postnotes_note_id_tl } ,
          }
        \__postnotes_tagsup_store_sctructnum:nN
          { postnotemark } \l_postnotes_note_id_tl
      }
    \socket_new_plug:nnn { tagsupport/postnotes/nomark/end } { default }
      { \tag_struct_end: } % NonStruct
    \socket_assign_plug:nn { tagsupport/postnotes/mark/begin } { default }
    \socket_assign_plug:nn { tagsupport/postnotes/mark/end } { default }
    \socket_assign_plug:nn { tagsupport/postnotes/nomark/begin } { default }
    \socket_assign_plug:nn { tagsupport/postnotes/nomark/end } { default }
    \socket_new_plug:nnn { tagsupport/postnotes/multisep/begin } { default }
      {
        \tag_mc_end_push:
        \tag_mc_begin:n { artifact }
      }
    \socket_new_plug:nnn { tagsupport/postnotes/multisep/end } { default }
      {
        \tag_mc_end:
        \tag_mc_begin_pop:n { }
      }
    \socket_assign_plug:nn { tagsupport/postnotes/multisep/begin } { default }
    \socket_assign_plug:nn { tagsupport/postnotes/multisep/end } { default }
    \socket_new_plug:nnn { tagsupport/postnotes/printlist/begin } { default }
      { \tag_tool:n { para/tagging=false } }
    \socket_new_plug:nnn { tagsupport/postnotes/printlist/end } { default }
      { }
    \socket_assign_plug:nn { tagsupport/postnotes/printlist/begin } { default }
    \socket_assign_plug:nn { tagsupport/postnotes/printlist/end } { default }
    \socket_new_plug:nnn { tagsupport/postnotes/printnote/begin } { default }
      {
        \bool_if:NF \l__postnotes_print_as_list_bool
          {
            \tag_struct_begin:n
              {
                tag = endnote ,
                attribute-class = EndnoteType ,
                label = { postnote. \l_postnotes_print_note_id_tl } ,
                ref = { postnotemark. \l_postnotes_print_note_id_tl } ,
              }
            \__postnotes_tagsup_store_sctructnum:nN
              { postnote } \l_postnotes_print_note_id_tl
         }
      }
    \socket_new_plug:nnn { tagsupport/postnotes/printnote/end } { default }
      {
        \bool_if:NF \l__postnotes_print_as_list_bool
          { \tag_struct_end: }  % endnote
      }
    \socket_assign_plug:nn { tagsupport/postnotes/printnote/begin } { default }
    \socket_assign_plug:nn { tagsupport/postnotes/printnote/end } { default }
    \socket_new_plug:nnn { tagsupport/postnotes/printmark/begin } { default }
      {
        \bool_if:NF \l__postnotes_print_as_list_bool
          {
            \tag_struct_begin:n { tag=endnotelabel }
            \tag_mc_begin:n { tag=Lbl }
          }
      }
    \socket_new_plug:nnn { tagsupport/postnotes/printmark/end } { default }
      {
        \bool_if:NF \l__postnotes_print_as_list_bool
          {
            \tag_mc_end:
            \tag_struct_end: % endnotelabel
          }
      }
    \socket_assign_plug:nn { tagsupport/postnotes/printmark/begin } { default }
    \socket_assign_plug:nn { tagsupport/postnotes/printmark/end } { default }
    \socket_new_plug:nnn { tagsupport/postnotes/printtext/begin } { default }
      {
        \bool_if:NTF \l__postnotes_print_as_list_bool
          {
            \tag_struct_begin:n
              {
                tag = endnote ,
                attribute-class = EndnoteType ,
                label = { postnote. \l_postnotes_print_note_id_tl } ,
                ref = { postnotemark. \l_postnotes_print_note_id_tl } ,
              }
            \__postnotes_tagsup_store_sctructnum:nN
              { postnote } \l_postnotes_print_note_id_tl
            \tag_struct_begin:n { tag=text-unit }
            \tag_struct_begin:n { tag=text }
            \tag_tool:n { para/tagging=true }
            \tag_mc_begin:n { }
          }
          {
            \tag_struct_begin:n { tag=text-unit }
            \tag_struct_begin:n { tag=text }
            \tag_tool:n { para/tagging=true }
            \tag_mc_begin:n { }
          }
      }
    \socket_new_plug:nnn { tagsupport/postnotes/printtext/end } { default }
      {
        \bool_if:NTF \l__postnotes_print_as_list_bool
          {
            \tag_mc_end:
            \tag_tool:n { para/tagging=false }
            \tag_struct_end: % text
            \tag_struct_end: % text-unit
            \tag_struct_end: % endnote
          }
          {
            \tag_mc_end:
            \tag_tool:n { para/tagging=false }
            \tag_struct_end: % text
            \tag_struct_end: % text-unit
          }
      }
    \socket_assign_plug:nn { tagsupport/postnotes/printtext/begin } { default }
    \socket_assign_plug:nn { tagsupport/postnotes/printtext/end } { default }
    \IfInstanceExistsT { blockenv } { list }
      {
        \DeclareInstance { blockenv } { postnoteslist } { display }
          {
            env-name       = postnoteslist ,
            tag-name       = L ,
            tag-class      = EndnotesList ,
            tagging-recipe = list ,
            inner-level-counter = ,
            level-increase = true ,
            setup-code     = ,
            block-instance = list ,
            inner-instance = postnoteslist ,
          }
        \DeclareInstanceCopy { blockenv }
          { postnoteslisthang } { postnoteslist }
        \EditInstance { blockenv } { postnoteslisthang }
          { env-name = postnoteslisthang }
        \DeclareInstance { list } { postnoteslist } { std }
          { item-instance = postnoteslist }
        \DeclareInstance { item } { postnoteslist } { std }
          {
            label-format = { \hspace { \labelsep } \normalfont ~ #1 } ,
            label-align = left ,
          }
        \RenewDocumentEnvironment { postnoteslist } { }
          {
            \UseInstance { blockenv } { postnoteslist }
              {
                leftmargin     = 0pt ,
                label-width    = 0pt ,
                item-indent    = .5\parindent ,
                rightmargin    = 0pt ,
                parindent      = \parindent ,
                par-skip       = \parskip ,
                item-skip      = 0pt ,
                beginsep       = .5\topsep ,
                begin-par-skip = .5\partopsep ,
              }
          }
          { \endblockenv }
        \RenewDocumentEnvironment { postnoteslisthang } { }
          {
            \UseInstance { blockenv } { postnoteslisthang }
              {
                leftmargin     = 1em ,
                label-width    = -\leftmargin ,
                item-indent    = -2\leftmargin ,
                rightmargin    = 0pt ,
                parindent      = \parindent ,
                par-skip       = \parskip ,
                item-skip      = 0pt ,
                beginsep       = .5\topsep ,
                begin-par-skip = .5\partopsep ,
              }
          }
          { \endblockenv }
      }
    \bool_new:N \l__postnotes_inside_note_bool
    \AddToHookWithArguments { label } [ postnotes/tagsup ]
      {
        \bool_if:NT \l__postnotes_inside_note_bool
          {
            \property_record:nn { postnote@label@innote. #1 }
              { postnotes/tagsup@noteid }
          }
      }
    \AddToHook { postnotes/print/note/begin } [ postnotes/tagsup ]
      { \bool_set_true:N \l__postnotes_inside_note_bool }
    \property_new:nnnn { postnotes/tagsup@noteid } { now } { 0 }
      { \l_postnotes_print_note_id_tl }
    \AddToHook { package/zref-user/after } [ postnotes/tagsup ]
      {
        \zref@newprop { postnotes@tagsup@noteid } [ 0 ]
          { \l_postnotes_print_note_id_tl }
        \AddToHook { postnotes/print/note/begin } [ postnotes/tagsup ]
          { \zref@localaddprop { main } { postnotes@tagsup@noteid } }
      }
    \AddToHook { postnotes/note/store } [ postnotes/tagsup ]
      {
        \str_if_empty:NF \l__postnotes_note_label_str
          {
            \prop_gput:cnV
              { \__postnotes_data_name:e { \l_postnotes_note_id_tl } }
              { label } \l__postnotes_note_label_str
          }
      }
    \AddToHook { package/zref-user/after } [ postnotes/tagsup ]
      {
        \AddToHook { postnotes/note/store } [ postnotes/tagsup ]
          {
            \str_if_empty:NF \l__postnotes_note_zlabel_str
              {
                \prop_gput:cnV
                  { \__postnotes_data_name:e { \l_postnotes_note_id_tl } }
                  { zlabel } \l__postnotes_note_zlabel_str
              }
          }
      }
    \AddToHook { postnotes/print/note/begin } [ postnotes/tagsup ]
      {
        \__postnotes_prop_get:nnN { \l_postnotes_print_note_id_tl }
          { label } \l__postnotes_restore_tmp_tl
        \tl_if_empty:NF \l__postnotes_restore_tmp_tl
          {
            \exp_args:Ne \property_record:nn
              { postnote@label@option. \l__postnotes_restore_tmp_tl }
              { postnotes/tagsup@noteid }
          }
        \__postnotes_prop_get:nnN { \l_postnotes_print_note_id_tl }
          { zlabel } \l__postnotes_restore_tmp_tl
        \tl_if_empty:NF \l__postnotes_restore_tmp_tl
          {
            \exp_args:Ne \property_record:nn
              { postnote@zlabel@option. \l__postnotes_restore_tmp_tl }
              { postnotes/tagsup@noteid }
          }
      }
    \prop_new:N \g__postnotes_tagsup_structnums_prop
    \cs_new_protected:Npn \__postnotes_tagsup_store_sctructnum:nN #1#2
      {
        \prop_gput:Nee \g__postnotes_tagsup_structnums_prop
          { #1 . #2 } { \tag_get:n { struct_num } }
      }
    \prop_new:N \g__postnotes_tagsup_crossrefs_prop
    \cs_new_protected:Npn \__postnotes_tagsup_store_crossref:nN #1#2
      {
        \prop_gput:Nee \g__postnotes_tagsup_crossrefs_prop
          { \tag_get:n { struct_num } } { #1 . #2 }
      }
    \cs_new_protected:Npn \__postnotes_tagsup_gput_ref:nn #1#2
      {
        \tag_if_active:T
          { \tag_struct_gput:ene {#1} {ref} { \tag_struct_object_ref:e {#2} } }
      }
    \AddToHook { tagpdf/finish/before } [ postnotes/tagsup ]
      {
        \prop_map_inline:Nn \g__postnotes_tagsup_crossrefs_prop
          {
            \__postnotes_tagsup_gput_ref:nn
              { \prop_item:Nn \g__postnotes_tagsup_structnums_prop {#2} }
              {#1}
          }
      }
    \socket_new_plug:nnn { tagsupport/postnotes/postnoteref/begin } { default }
      {
        \tag_mc_end_push:
        \property_if_recorded:eeTF
          { postnote@label@innote. \l__postnotes_note_ref_label_str }
          { postnotes/tagsup@noteid }
          {
            \tl_set:Ne \l__postnotes_tmpa_tl
              {
                \property_ref:ee
                  { postnote@label@innote. \l__postnotes_note_ref_label_str }
                  { postnotes/tagsup@noteid }
              }
            \tag_struct_begin:n
              {
                tag = endnotemark ,
                ref = { postnote. \l__postnotes_tmpa_tl } ,
              }
            \__postnotes_tagsup_store_crossref:nN
              { postnote } \l__postnotes_tmpa_tl
          }
          {
            \property_if_recorded:eeTF
              { postnote@label@option. \l__postnotes_note_ref_label_str }
              { postnotes/tagsup@noteid }
              {
                \tl_set:Ne \l__postnotes_tmpa_tl
                  {
                    \property_ref:ee
                      { postnote@label@option. \l__postnotes_note_ref_label_str }
                      { postnotes/tagsup@noteid }
                  }
                \tag_struct_begin:n
                  {
                    tag = endnotemark ,
                    ref = { postnotemark. \l__postnotes_tmpa_tl } ,
                  }
                \__postnotes_tagsup_store_crossref:nN
                  { postnotemark } \l__postnotes_tmpa_tl
              }
              { \tag_struct_begin:n { tag = endnotemark } }
          }
        \tag_mc_begin:n { }
      }
    \socket_new_plug:nnn { tagsupport/postnotes/postnoteref/end } { default }
      {
        \tag_mc_end:
        \tag_struct_end: % endnotemark
        \tag_mc_begin_pop:n { }
      }
    \socket_assign_plug:nn { tagsupport/postnotes/postnoteref/begin } { default }
    \socket_assign_plug:nn { tagsupport/postnotes/postnoteref/end } { default }
    \AddToHook { package/zref-user/after } [ postnotes/tagsup ]
      {
        \socket_new_plug:nnn { tagsupport/postnotes/postnotezref/begin } { default }
          {
            \tag_mc_end_push:
            \zref@ifrefcontainsprop { \l__postnotes_note_zref_zlabel_str }
              { postnotes@tagsup@noteid }
              {
                \tl_set:Ne \l__postnotes_tmpa_tl
                  {
                    \zref@extract { \l__postnotes_note_zref_zlabel_str }
                      { postnotes@tagsup@noteid }
                  }
                \tag_struct_begin:n
                  {
                    tag = endnotemark ,
                    ref = { postnote. \l__postnotes_tmpa_tl } ,
                  }
                \__postnotes_tagsup_store_crossref:nN
                  { postnote } \l__postnotes_tmpa_tl
              }
              {
                \property_if_recorded:eeTF
                  { postnote@zlabel@option. \l__postnotes_note_zref_zlabel_str }
                  { postnotes/tagsup@noteid }
                  {
                    \tl_set:Ne \l__postnotes_tmpa_tl
                      {
                        \property_ref:ee
                          {
                            postnote@zlabel@option.
                            \l__postnotes_note_zref_zlabel_str
                          }
                          { postnotes/tagsup@noteid }
                      }
                    \tag_struct_begin:n
                      {
                        tag = endnotemark ,
                        ref = { postnotemark. \l__postnotes_tmpa_tl } ,
                      }
                    \__postnotes_tagsup_store_crossref:nN
                      { postnotemark } \l__postnotes_tmpa_tl
                  }
                  { \tag_struct_begin:n { tag = endnotemark } }
              }
            \tag_mc_begin:n { }
          }
        \socket_new_plug:nnn { tagsupport/postnotes/postnotezref/end } { default }
          {
            \tag_mc_end:
            \tag_struct_end: % endnotemark
            \tag_mc_begin_pop:n { }
          }
        \socket_assign_plug:nn { tagsupport/postnotes/postnotezref/begin } { default }
        \socket_assign_plug:nn { tagsupport/postnotes/postnotezref/end } { default }
      }
  }
\tl_new:N \pntitle
\tl_new:N \pnhdnotes
\tl_new:N \pnhdtopage
\tl_new:N \pnhdtopages
\tl_set:Nn \pntitle { Notes }
\tl_set:Nn \pnhdnotes { Notes }
\tl_set:Nn \pnhdtopage { to~page }
\tl_set:Nn \pnhdtopages { to~pages }
\cs_new_protected:Npn \__postnotes_define_language:nn #1#2
  {
    \tl_new:c { g__postnotes_language_ #1 _tl }
    \tl_gset:cn { g__postnotes_language_ #1 _tl } {#2}
  }
\cs_new_protected:Npn \__postnotes_set_babel_language:nn #1#2
  {
    \ActivateGenericHook { babel/#1/beforeextras }
    \exp_args:Nnv \AddToHook { babel/#1/beforeextras }
      { g__postnotes_language_ #2 _tl }
  }
\cs_new_protected:Npn \__postnotes_set_polyglossia_language:nn #1#2
  {
    \AddToHook { package/polyglossia/after }
      {
        \exp_args:Nnv \csgappto { captions #1 }
          { g__postnotes_language_ #2 _tl }
      }
  }
\__postnotes_define_language:nn { english }
  {
    \tl_set:Nn \pntitle     { Notes }
    \tl_set:Nn \pnhdnotes   { Notes }
    \tl_set:Nn \pnhdtopage  { to~page }
    \tl_set:Nn \pnhdtopages { to~pages }
  }
\__postnotes_set_babel_language:nn { english }    { english }
\__postnotes_set_babel_language:nn { british }    { english }
\__postnotes_set_babel_language:nn { american }   { english }
\__postnotes_set_babel_language:nn { canadian }   { english }
\__postnotes_set_babel_language:nn { australian } { english }
\__postnotes_set_babel_language:nn { newzealand } { english }
\__postnotes_set_babel_language:nn { UKenglish }  { english }
\__postnotes_set_babel_language:nn { USenglish }  { english }
\__postnotes_set_polyglossia_language:nn { english } { english }
\__postnotes_define_language:nn { portuguese }
  {
    \tl_set:Nn \pntitle     { Notas }
    \tl_set:Nn \pnhdnotes   { Notas }
    \tl_set:Nn \pnhdtopage  { da~página }
    \tl_set:Nn \pnhdtopages { das~páginas }
  }
\__postnotes_set_babel_language:nn { portuguese } { portuguese }
\__postnotes_set_babel_language:nn { brazilian }  { portuguese }
\__postnotes_set_babel_language:nn { portuges }   { portuguese }
\__postnotes_set_babel_language:nn { brazil }     { portuguese }
\__postnotes_set_polyglossia_language:nn { portuguese } { portuguese }
\__postnotes_define_language:nn { french }
  {
    \tl_set:Nn \pntitle     { Notes }
    \tl_set:Nn \pnhdnotes   { Notes }
    \tl_set:Nn \pnhdtopage  { de~la~page }
    \tl_set:Nn \pnhdtopages { des~pages }
  }
\__postnotes_set_babel_language:nn { french }  { french }
\__postnotes_set_babel_language:nn { acadian } { french }
\__postnotes_set_polyglossia_language:nn { french } { french }
\__postnotes_define_language:nn { german }
  {
    \tl_set:Nn \pntitle     { Endnoten }
    \tl_set:Nn \pnhdnotes   { Endnoten }
    \tl_set:Nn \pnhdtopage  { zu~Seite }
    \tl_set:Nn \pnhdtopages { zu~Seiten }
  }
\__postnotes_set_babel_language:nn { german }       { german }
\__postnotes_set_babel_language:nn { ngerman }      { german }
\__postnotes_set_babel_language:nn { austrian }     { german }
\__postnotes_set_babel_language:nn { naustrian }    { german }
\__postnotes_set_babel_language:nn { swissgerman }  { german }
\__postnotes_set_babel_language:nn { nswissgerman } { german }
\__postnotes_set_polyglossia_language:nn { german } { german }
%% 
%%
%% End of file `postnotes.sty'.
